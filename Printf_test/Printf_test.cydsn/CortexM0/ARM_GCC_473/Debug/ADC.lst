ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_initVar
  18              		.bss
  19              		.type	ADC_initVar, %object
  20              		.size	ADC_initVar, 1
  21              	ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_offset,2,4
  24              		.comm	ADC_countsPer10Volt,4,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_channelsConfig, %object
  28              		.size	ADC_channelsConfig, 4
  29              	ADC_channelsConfig:
  30 0000 00000000 		.space	4
  31              		.section	.text.ADC_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_Start, %function
  37              	ADC_Start:
  38              	.LFB0:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "CyLib.h"
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 2


  19:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** 
  22:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  23:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  24:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  25:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  27:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** 
  30:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  31:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  32:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  33:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  34:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** 
  37:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  38:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  39:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  40:.\Generated_Source\PSoC4/ADC.c **** *
  41:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  42:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  43:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  44:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  45:.\Generated_Source\PSoC4/ADC.c **** *
  46:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  47:.\Generated_Source\PSoC4/ADC.c **** *  None.
  48:.\Generated_Source\PSoC4/ADC.c **** *
  49:.\Generated_Source\PSoC4/ADC.c **** * Return:
  50:.\Generated_Source\PSoC4/ADC.c **** *  None.
  51:.\Generated_Source\PSoC4/ADC.c **** *
  52:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  53:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  54:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  55:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  56:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  57:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  58:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  59:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  61:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  62:.\Generated_Source\PSoC4/ADC.c **** *
  63:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  64:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  65:.\Generated_Source\PSoC4/ADC.c **** {
  40              		.loc 1 65 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 00AF     		add	r7, sp, #0
  48              	.LCFI1:
  49              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 3


  66:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  67:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  50              		.loc 1 67 0
  51 0004 064B     		ldr	r3, .L3
  52 0006 1B78     		ldrb	r3, [r3]
  53 0008 002B     		cmp	r3, #0
  54 000a 04D1     		bne	.L2
  68:.\Generated_Source\PSoC4/ADC.c ****     {
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  55              		.loc 1 69 0
  56 000c FFF7FEFF 		bl	ADC_Init
  70:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  57              		.loc 1 70 0
  58 0010 034B     		ldr	r3, .L3
  59 0012 0122     		mov	r2, #1
  60 0014 1A70     		strb	r2, [r3]
  61              	.L2:
  71:.\Generated_Source\PSoC4/ADC.c ****     }
  72:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  62              		.loc 1 72 0
  63 0016 FFF7FEFF 		bl	ADC_Enable
  73:.\Generated_Source\PSoC4/ADC.c **** }
  64              		.loc 1 73 0
  65 001a BD46     		mov	sp, r7
  66              		@ sp needed for prologue
  67 001c 80BD     		pop	{r7, pc}
  68              	.L4:
  69 001e C046     		.align	2
  70              	.L3:
  71 0020 00000000 		.word	ADC_initVar
  72              		.cfi_endproc
  73              	.LFE0:
  74              		.size	ADC_Start, .-ADC_Start
  75              		.global	__aeabi_idiv
  76              		.section	.text.ADC_Init,"ax",%progbits
  77              		.align	2
  78              		.global	ADC_Init
  79              		.code	16
  80              		.thumb_func
  81              		.type	ADC_Init, %function
  82              	ADC_Init:
  83              	.LFB1:
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** 
  76:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  77:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  78:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  79:.\Generated_Source\PSoC4/ADC.c **** *
  80:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  81:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  82:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  83:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  84:.\Generated_Source\PSoC4/ADC.c **** *
  85:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  86:.\Generated_Source\PSoC4/ADC.c **** *  None.
  87:.\Generated_Source\PSoC4/ADC.c **** *
  88:.\Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 4


  89:.\Generated_Source\PSoC4/ADC.c **** *  None.
  90:.\Generated_Source\PSoC4/ADC.c **** *
  91:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  92:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  93:.\Generated_Source\PSoC4/ADC.c **** *
  94:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  96:.\Generated_Source\PSoC4/ADC.c **** {
  84              		.loc 1 96 0
  85              		.cfi_startproc
  86 0000 90B5     		push	{r4, r7, lr}
  87              	.LCFI2:
  88              		.cfi_def_cfa_offset 12
  89              		.cfi_offset 4, -12
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 85B0     		sub	sp, sp, #20
  93              	.LCFI3:
  94              		.cfi_def_cfa_offset 32
  95 0004 00AF     		add	r7, sp, #0
  96              	.LCFI4:
  97              		.cfi_def_cfa_register 7
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  98:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  99:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
 100:.\Generated_Source\PSoC4/ADC.c **** 
 101:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 102:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 103:.\Generated_Source\PSoC4/ADC.c ****         {
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 105:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 106:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 107:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 108:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 109:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 110:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 111:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 112:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 113:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 114:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 115:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 116:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 117:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 118:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 119:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 120:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 121:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 122:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 123:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 124:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 125:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 126:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 127:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 128:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 129:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 130:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 131:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 5


 132:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 133:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 134:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 135:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 136:.\Generated_Source\PSoC4/ADC.c ****         };
 137:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 138:.\Generated_Source\PSoC4/ADC.c **** 
 139:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 140:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 141:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  98              		.loc 1 141 0
  99 0006 0E20     		mov	r0, #14
 100 0008 0321     		mov	r1, #3
 101 000a FFF7FEFF 		bl	CyIntSetPriority
 142:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 102              		.loc 1 142 0
 103 000e 564B     		ldr	r3, .L15
 104 0010 0E20     		mov	r0, #14
 105 0012 191C     		mov	r1, r3
 106 0014 FFF7FEFF 		bl	CyIntSetVector
 143:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 144:.\Generated_Source\PSoC4/ADC.c **** 
 145:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 107              		.loc 1 146 0
 108 0018 544B     		ldr	r3, .L15+4
 109 001a 0122     		mov	r2, #1
 110 001c 1A60     		str	r2, [r3]
 147:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG = ADC_DEFAULT_CTRL_REG_CFG;
 111              		.loc 1 147 0
 112 001e 544B     		ldr	r3, .L15+8
 113 0020 544A     		ldr	r2, .L15+12
 114 0022 1A60     		str	r2, [r3]
 148:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 115              		.loc 1 148 0
 116 0024 544B     		ldr	r3, .L15+16
 117 0026 554A     		ldr	r2, .L15+20
 118 0028 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 119              		.loc 1 149 0
 120 002a 554B     		ldr	r3, .L15+24
 121 002c 554A     		ldr	r2, .L15+28
 122 002e 1A60     		str	r2, [r3]
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 123              		.loc 1 150 0
 124 0030 554B     		ldr	r3, .L15+32
 125 0032 0022     		mov	r2, #0
 126 0034 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 127              		.loc 1 151 0
 128 0036 554B     		ldr	r3, .L15+36
 129 0038 554A     		ldr	r2, .L15+40
 130 003a 1A60     		str	r2, [r3]
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 131              		.loc 1 152 0
 132 003c 554B     		ldr	r3, .L15+44
 133 003e 544A     		ldr	r2, .L15+40
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 6


 134 0040 1A60     		str	r2, [r3]
 153:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 154:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 155:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0; 
 135              		.loc 1 155 0
 136 0042 554B     		ldr	r3, .L15+48
 137 0044 544A     		ldr	r2, .L15+48
 138 0046 1268     		ldr	r2, [r2]
 139 0048 8021     		mov	r1, #128
 140 004a 4902     		lsl	r1, r1, #9
 141 004c 0A43     		orr	r2, r1
 142 004e 1A60     		str	r2, [r3]
 156:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 157:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 158:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0; 
 159:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 160:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */    
 161:.\Generated_Source\PSoC4/ADC.c **** 
 162:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 143              		.loc 1 162 0
 144 0050 524B     		ldr	r3, .L15+52
 145 0052 0022     		mov	r2, #0
 146 0054 1A60     		str	r2, [r3]
 163:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 147              		.loc 1 163 0
 148 0056 524B     		ldr	r3, .L15+56
 149 0058 0022     		mov	r2, #0
 150 005a 1A60     		str	r2, [r3]
 164:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 151              		.loc 1 164 0
 152 005c 514B     		ldr	r3, .L15+60
 153 005e 0122     		mov	r2, #1
 154 0060 1A60     		str	r2, [r3]
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 155              		.loc 1 165 0
 156 0062 514B     		ldr	r3, .L15+64
 157 0064 0222     		mov	r2, #2
 158 0066 1A60     		str	r2, [r3]
 166:.\Generated_Source\PSoC4/ADC.c ****     
 167:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 168:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 159              		.loc 1 168 0
 160 0068 504B     		ldr	r3, .L15+68
 161 006a 1B68     		ldr	r3, [r3]
 162 006c 7B60     		str	r3, [r7, #4]
 169:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 170:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= (uint32)~ADC_DCEN;
 171:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 172:.\Generated_Source\PSoC4/ADC.c ****     #else  /* clock speed < 9 Mhz */  
 173:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_DLY_INC;
 163              		.loc 1 173 0
 164 006e 7B68     		ldr	r3, [r7, #4]
 165 0070 0122     		mov	r2, #1
 166 0072 1343     		orr	r3, r2
 167 0074 7B60     		str	r3, [r7, #4]
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif /* clock speed > 9 Mhz */
 175:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 7


 168              		.loc 1 175 0
 169 0076 4D4B     		ldr	r3, .L15+68
 170 0078 7A68     		ldr	r2, [r7, #4]
 171 007a 1A60     		str	r2, [r3]
 176:.\Generated_Source\PSoC4/ADC.c ****     
 177:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 178:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 179:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 180:.\Generated_Source\PSoC4/ADC.c **** 
 181:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 172              		.loc 1 181 0
 173 007c 0023     		mov	r3, #0
 174 007e FB60     		str	r3, [r7, #12]
 175 0080 6BE0     		b	.L6
 176              	.L14:
 182:.\Generated_Source\PSoC4/ADC.c ****     {
 183:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 177              		.loc 1 183 0
 178 0082 4B4B     		ldr	r3, .L15+72
 179 0084 FA68     		ldr	r2, [r7, #12]
 180 0086 9200     		lsl	r2, r2, #2
 181 0088 D258     		ldr	r2, [r2, r3]
 182 008a DC23     		mov	r3, #220
 183 008c 9B01     		lsl	r3, r3, #6
 184 008e 1340     		and	r3, r2
 185 0090 7B60     		str	r3, [r7, #4]
 184:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 185:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 186:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 187:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is wounded to 10-bit then the SUB_RESOLUTION bit 
 188:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit 
 189:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 190:.\Generated_Source\PSoC4/ADC.c ****         */
 191:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 192:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 193:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 195:.\Generated_Source\PSoC4/ADC.c **** 
 196:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 197:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 198:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 199:.\Generated_Source\PSoC4/ADC.c ****         {
 200:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 186              		.loc 1 200 0
 187 0092 FB68     		ldr	r3, [r7, #12]
 188 0094 9B00     		lsl	r3, r3, #2
 189 0096 474A     		ldr	r2, .L15+76
 190 0098 9B18     		add	r3, r3, r2
 191 009a 7A68     		ldr	r2, [r7, #4]
 192 009c 1A60     		str	r2, [r3]
 201:.\Generated_Source\PSoC4/ADC.c **** 
 202:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 193              		.loc 1 202 0
 194 009e 444B     		ldr	r3, .L15+72
 195 00a0 FA68     		ldr	r2, [r7, #12]
 196 00a2 9200     		lsl	r2, r2, #2
 197 00a4 D258     		ldr	r2, [r2, r3]
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 8


 198 00a6 0123     		mov	r3, #1
 199 00a8 1340     		and	r3, r2
 200 00aa 0AD0     		beq	.L7
 203:.\Generated_Source\PSoC4/ADC.c ****             {
 204:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 201              		.loc 1 204 0
 202 00ac 3B4B     		ldr	r3, .L15+52
 203 00ae 3B4A     		ldr	r2, .L15+52
 204 00b0 1168     		ldr	r1, [r2]
 205 00b2 FA68     		ldr	r2, [r7, #12]
 206 00b4 0120     		mov	r0, #1
 207 00b6 041C     		mov	r4, r0
 208 00b8 9440     		lsl	r4, r4, r2
 209 00ba 221C     		mov	r2, r4
 210 00bc 92B2     		uxth	r2, r2
 211 00be 0A43     		orr	r2, r1
 212 00c0 1A60     		str	r2, [r3]
 213              	.L7:
 205:.\Generated_Source\PSoC4/ADC.c ****             }
 206:.\Generated_Source\PSoC4/ADC.c **** 
 207:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 214              		.loc 1 207 0
 215 00c2 3B4B     		ldr	r3, .L15+72
 216 00c4 FA68     		ldr	r2, [r7, #12]
 217 00c6 9200     		lsl	r2, r2, #2
 218 00c8 D258     		ldr	r2, [r2, r3]
 219 00ca 0223     		mov	r3, #2
 220 00cc 1340     		and	r3, r2
 221 00ce 0AD0     		beq	.L8
 208:.\Generated_Source\PSoC4/ADC.c ****             {
 209:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 222              		.loc 1 209 0
 223 00d0 334B     		ldr	r3, .L15+56
 224 00d2 334A     		ldr	r2, .L15+56
 225 00d4 1168     		ldr	r1, [r2]
 226 00d6 FA68     		ldr	r2, [r7, #12]
 227 00d8 0120     		mov	r0, #1
 228 00da 041C     		mov	r4, r0
 229 00dc 9440     		lsl	r4, r4, r2
 230 00de 221C     		mov	r2, r4
 231 00e0 92B2     		uxth	r2, r2
 232 00e2 0A43     		orr	r2, r1
 233 00e4 1A60     		str	r2, [r3]
 234              	.L8:
 210:.\Generated_Source\PSoC4/ADC.c ****             }
 211:.\Generated_Source\PSoC4/ADC.c ****         }
 212:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 213:.\Generated_Source\PSoC4/ADC.c ****             else
 214:.\Generated_Source\PSoC4/ADC.c ****             {
 215:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 216:.\Generated_Source\PSoC4/ADC.c **** 
 217:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 218:.\Generated_Source\PSoC4/ADC.c ****                 {
 219:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 220:.\Generated_Source\PSoC4/ADC.c ****                 }
 221:.\Generated_Source\PSoC4/ADC.c **** 
 222:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 9


 223:.\Generated_Source\PSoC4/ADC.c ****                 {
 224:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 225:.\Generated_Source\PSoC4/ADC.c ****                 }
 226:.\Generated_Source\PSoC4/ADC.c ****             }
 227:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 228:.\Generated_Source\PSoC4/ADC.c **** 
 229:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 235              		.loc 1 229 0
 236 00e6 324B     		ldr	r3, .L15+72
 237 00e8 FA68     		ldr	r2, [r7, #12]
 238 00ea 9200     		lsl	r2, r2, #2
 239 00ec D258     		ldr	r2, [r2, r3]
 240 00ee 8023     		mov	r3, #128
 241 00f0 9B00     		lsl	r3, r3, #2
 242 00f2 1340     		and	r3, r2
 243 00f4 03D0     		beq	.L9
 230:.\Generated_Source\PSoC4/ADC.c ****         {
 231:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 244              		.loc 1 231 0
 245 00f6 8023     		mov	r3, #128
 246 00f8 5B00     		lsl	r3, r3, #1
 247 00fa BB60     		str	r3, [r7, #8]
 248 00fc 02E0     		b	.L10
 249              	.L9:
 232:.\Generated_Source\PSoC4/ADC.c ****         }
 233:.\Generated_Source\PSoC4/ADC.c ****         else
 234:.\Generated_Source\PSoC4/ADC.c ****         {
 235:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 250              		.loc 1 235 0
 251 00fe 8023     		mov	r3, #128
 252 0100 5B01     		lsl	r3, r3, #5
 253 0102 BB60     		str	r3, [r7, #8]
 254              	.L10:
 236:.\Generated_Source\PSoC4/ADC.c ****         }
 237:.\Generated_Source\PSoC4/ADC.c **** 
 238:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 255              		.loc 1 238 0
 256 0104 2A4B     		ldr	r3, .L15+72
 257 0106 FA68     		ldr	r2, [r7, #12]
 258 0108 9200     		lsl	r2, r2, #2
 259 010a D258     		ldr	r2, [r2, r3]
 260 010c 8023     		mov	r3, #128
 261 010e 5B00     		lsl	r3, r3, #1
 262 0110 1340     		and	r3, r2
 263 0112 05D1     		bne	.L11
 239:.\Generated_Source\PSoC4/ADC.c ****         {  
 240:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 241:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 242:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 243:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 244:.\Generated_Source\PSoC4/ADC.c ****             #else    
 245:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 264              		.loc 1 245 0
 265 0114 284B     		ldr	r3, .L15+80
 266 0116 FA68     		ldr	r2, [r7, #12]
 267 0118 5200     		lsl	r2, r2, #1
 268 011a 0021     		mov	r1, #0
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 10


 269 011c D152     		strh	r1, [r2, r3]
 270 011e 09E0     		b	.L12
 271              	.L11:
 246:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */    
 247:.\Generated_Source\PSoC4/ADC.c ****         }
 248:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 249:.\Generated_Source\PSoC4/ADC.c ****         {
 250:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 251:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 252:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 272              		.loc 1 252 0
 273 0120 BB68     		ldr	r3, [r7, #8]
 274 0122 002B     		cmp	r3, #0
 275 0124 00DA     		bge	.L13
 276 0126 0133     		add	r3, r3, #1
 277              	.L13:
 278 0128 5B10     		asr	r3, r3, #1
 279 012a 99B2     		uxth	r1, r3
 280 012c 224B     		ldr	r3, .L15+80
 281 012e FA68     		ldr	r2, [r7, #12]
 282 0130 5200     		lsl	r2, r2, #1
 283 0132 D152     		strh	r1, [r2, r3]
 284              	.L12:
 253:.\Generated_Source\PSoC4/ADC.c ****             #else    
 254:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 255:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */    
 256:.\Generated_Source\PSoC4/ADC.c ****         }
 257:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 285              		.loc 1 258 0
 286 0134 BB68     		ldr	r3, [r7, #8]
 287 0136 214A     		ldr	r2, .L15+84
 288 0138 5343     		mul	r3, r2
 289 013a 214A     		ldr	r2, .L15+88
 290 013c 9B18     		add	r3, r3, r2
 259:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 291              		.loc 1 259 0
 292 013e 181C     		mov	r0, r3
 293 0140 2049     		ldr	r1, .L15+92
 294 0142 FFF7FEFF 		bl	__aeabi_idiv
 295 0146 031C     		mov	r3, r0
 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 296              		.loc 1 258 0
 297 0148 9BB2     		uxth	r3, r3
 298 014a 19B2     		sxth	r1, r3
 299 014c 1E4B     		ldr	r3, .L15+96
 300 014e FA68     		ldr	r2, [r7, #12]
 301 0150 9200     		lsl	r2, r2, #2
 302 0152 D150     		str	r1, [r2, r3]
 181:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 303              		.loc 1 181 0
 304 0154 FB68     		ldr	r3, [r7, #12]
 305 0156 0133     		add	r3, r3, #1
 306 0158 FB60     		str	r3, [r7, #12]
 307              	.L6:
 181:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 308              		.loc 1 181 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 11


 309 015a FB68     		ldr	r3, [r7, #12]
 310 015c 002B     		cmp	r3, #0
 311 015e 90D0     		beq	.L14
 260:.\Generated_Source\PSoC4/ADC.c ****     }
 261:.\Generated_Source\PSoC4/ADC.c **** }
 312              		.loc 1 261 0 is_stmt 1
 313 0160 BD46     		mov	sp, r7
 314 0162 05B0     		add	sp, sp, #20
 315              		@ sp needed for prologue
 316 0164 90BD     		pop	{r4, r7, pc}
 317              	.L16:
 318 0166 C046     		.align	2
 319              	.L15:
 320 0168 00000000 		.word	ADC_ISR
 321 016c 20001A40 		.word	1075445792
 322 0170 00001A40 		.word	1075445760
 323 0174 50020051 		.word	1358955088
 324 0178 04001A40 		.word	1075445764
 325 017c 74000080 		.word	-2147483532
 326 0180 18001A40 		.word	1075445784
 327 0184 0000FF07 		.word	134152192
 328 0188 1C001A40 		.word	1075445788
 329 018c 10001A40 		.word	1075445776
 330 0190 04000400 		.word	262148
 331 0194 14001A40 		.word	1075445780
 332 0198 00031A40 		.word	1075446528
 333 019c 28021A40 		.word	1075446312
 334 01a0 38021A40 		.word	1075446328
 335 01a4 18021A40 		.word	1075446296
 336 01a8 000F1A40 		.word	1075449600
 337 01ac 30001A40 		.word	1075445808
 338 01b0 00000000 		.word	ADC_channelsConfig
 339 01b4 80001A40 		.word	1075445888
 340 01b8 00000000 		.word	ADC_offset
 341 01bc 10270000 		.word	10000
 342 01c0 E40C0000 		.word	3300
 343 01c4 C8190000 		.word	6600
 344 01c8 00000000 		.word	ADC_countsPer10Volt
 345              		.cfi_endproc
 346              	.LFE1:
 347              		.size	ADC_Init, .-ADC_Init
 348              		.section	.text.ADC_Enable,"ax",%progbits
 349              		.align	2
 350              		.global	ADC_Enable
 351              		.code	16
 352              		.thumb_func
 353              		.type	ADC_Enable, %function
 354              	ADC_Enable:
 355              	.LFB2:
 262:.\Generated_Source\PSoC4/ADC.c **** 
 263:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 264:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 265:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 266:.\Generated_Source\PSoC4/ADC.c **** *
 267:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 268:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 269:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 12


 270:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 271:.\Generated_Source\PSoC4/ADC.c **** *  None.
 272:.\Generated_Source\PSoC4/ADC.c **** *
 273:.\Generated_Source\PSoC4/ADC.c **** * Return:
 274:.\Generated_Source\PSoC4/ADC.c **** *  None.
 275:.\Generated_Source\PSoC4/ADC.c **** *
 276:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 278:.\Generated_Source\PSoC4/ADC.c **** {
 356              		.loc 1 278 0
 357              		.cfi_startproc
 358 0000 80B5     		push	{r7, lr}
 359              	.LCFI5:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 00AF     		add	r7, sp, #0
 364              	.LCFI6:
 365              		.cfi_def_cfa_register 7
 279:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_ENABLE;
 366              		.loc 1 279 0
 367 0004 054B     		ldr	r3, .L18
 368 0006 054A     		ldr	r2, .L18
 369 0008 1268     		ldr	r2, [r2]
 370 000a 8021     		mov	r1, #128
 371 000c 0906     		lsl	r1, r1, #24
 372 000e 0A43     		orr	r2, r1
 373 0010 1A60     		str	r2, [r3]
 280:.\Generated_Source\PSoC4/ADC.c ****     /* The block is ready to use 10 us after the enable signal is set high. */
 281:.\Generated_Source\PSoC4/ADC.c ****     CyDelayUs(ADC_10US_DELAY);
 374              		.loc 1 281 0
 375 0012 0A20     		mov	r0, #10
 376 0014 FFF7FEFF 		bl	CyDelayUs
 282:.\Generated_Source\PSoC4/ADC.c **** }
 377              		.loc 1 282 0
 378 0018 BD46     		mov	sp, r7
 379              		@ sp needed for prologue
 380 001a 80BD     		pop	{r7, pc}
 381              	.L19:
 382              		.align	2
 383              	.L18:
 384 001c 00001A40 		.word	1075445760
 385              		.cfi_endproc
 386              	.LFE2:
 387              		.size	ADC_Enable, .-ADC_Enable
 388              		.section	.text.ADC_Stop,"ax",%progbits
 389              		.align	2
 390              		.global	ADC_Stop
 391              		.code	16
 392              		.thumb_func
 393              		.type	ADC_Stop, %function
 394              	ADC_Stop:
 395              	.LFB3:
 283:.\Generated_Source\PSoC4/ADC.c **** 
 284:.\Generated_Source\PSoC4/ADC.c **** 
 285:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 13


 287:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/ADC.c **** *
 289:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 290:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 291:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 292:.\Generated_Source\PSoC4/ADC.c **** *
 293:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 294:.\Generated_Source\PSoC4/ADC.c **** *  None.
 295:.\Generated_Source\PSoC4/ADC.c **** *
 296:.\Generated_Source\PSoC4/ADC.c **** * Return:
 297:.\Generated_Source\PSoC4/ADC.c **** *  None.
 298:.\Generated_Source\PSoC4/ADC.c **** *
 299:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 300:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 301:.\Generated_Source\PSoC4/ADC.c **** {
 396              		.loc 1 301 0
 397              		.cfi_startproc
 398 0000 80B5     		push	{r7, lr}
 399              	.LCFI7:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 00AF     		add	r7, sp, #0
 404              	.LCFI8:
 405              		.cfi_def_cfa_register 7
 302:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 406              		.loc 1 302 0
 407 0004 034B     		ldr	r3, .L21
 408 0006 034A     		ldr	r2, .L21
 409 0008 1268     		ldr	r2, [r2]
 410 000a 5200     		lsl	r2, r2, #1
 411 000c 5208     		lsr	r2, r2, #1
 412 000e 1A60     		str	r2, [r3]
 303:.\Generated_Source\PSoC4/ADC.c **** }
 413              		.loc 1 303 0
 414 0010 BD46     		mov	sp, r7
 415              		@ sp needed for prologue
 416 0012 80BD     		pop	{r7, pc}
 417              	.L22:
 418              		.align	2
 419              	.L21:
 420 0014 00001A40 		.word	1075445760
 421              		.cfi_endproc
 422              	.LFE3:
 423              		.size	ADC_Stop, .-ADC_Stop
 424              		.section	.text.ADC_StartConvert,"ax",%progbits
 425              		.align	2
 426              		.global	ADC_StartConvert
 427              		.code	16
 428              		.thumb_func
 429              		.type	ADC_StartConvert, %function
 430              	ADC_StartConvert:
 431              	.LFB4:
 304:.\Generated_Source\PSoC4/ADC.c **** 
 305:.\Generated_Source\PSoC4/ADC.c **** 
 306:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 14


 308:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/ADC.c **** *
 310:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 311:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 312:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 313:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 314:.\Generated_Source\PSoC4/ADC.c **** *
 315:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 316:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 317:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 318:.\Generated_Source\PSoC4/ADC.c **** *
 319:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 320:.\Generated_Source\PSoC4/ADC.c **** *  None.
 321:.\Generated_Source\PSoC4/ADC.c **** *
 322:.\Generated_Source\PSoC4/ADC.c **** * Return:
 323:.\Generated_Source\PSoC4/ADC.c **** *  None.
 324:.\Generated_Source\PSoC4/ADC.c **** *
 325:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 327:.\Generated_Source\PSoC4/ADC.c **** {
 432              		.loc 1 327 0
 433              		.cfi_startproc
 434 0000 80B5     		push	{r7, lr}
 435              	.LCFI9:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439 0002 00AF     		add	r7, sp, #0
 440              	.LCFI10:
 441              		.cfi_def_cfa_register 7
 328:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 329:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 442              		.loc 1 329 0
 443 0004 044B     		ldr	r3, .L24
 444 0006 044A     		ldr	r2, .L24
 445 0008 1268     		ldr	r2, [r2]
 446 000a 8021     		mov	r1, #128
 447 000c 4902     		lsl	r1, r1, #9
 448 000e 0A43     		orr	r2, r1
 449 0010 1A60     		str	r2, [r3]
 330:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 331:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 332:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 333:.\Generated_Source\PSoC4/ADC.c **** 
 334:.\Generated_Source\PSoC4/ADC.c **** }
 450              		.loc 1 334 0
 451 0012 BD46     		mov	sp, r7
 452              		@ sp needed for prologue
 453 0014 80BD     		pop	{r7, pc}
 454              	.L25:
 455 0016 C046     		.align	2
 456              	.L24:
 457 0018 04001A40 		.word	1075445764
 458              		.cfi_endproc
 459              	.LFE4:
 460              		.size	ADC_StartConvert, .-ADC_StartConvert
 461              		.section	.text.ADC_StopConvert,"ax",%progbits
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 15


 462              		.align	2
 463              		.global	ADC_StopConvert
 464              		.code	16
 465              		.thumb_func
 466              		.type	ADC_StopConvert, %function
 467              	ADC_StopConvert:
 468              	.LFB5:
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c **** 
 337:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 338:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 339:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 340:.\Generated_Source\PSoC4/ADC.c **** *
 341:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 342:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 343:.\Generated_Source\PSoC4/ADC.c **** *
 344:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 345:.\Generated_Source\PSoC4/ADC.c **** *  None.
 346:.\Generated_Source\PSoC4/ADC.c **** *
 347:.\Generated_Source\PSoC4/ADC.c **** * Return:
 348:.\Generated_Source\PSoC4/ADC.c **** *  None.
 349:.\Generated_Source\PSoC4/ADC.c **** *
 350:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 351:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 352:.\Generated_Source\PSoC4/ADC.c **** {
 469              		.loc 1 352 0
 470              		.cfi_startproc
 471 0000 80B5     		push	{r7, lr}
 472              	.LCFI11:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 00AF     		add	r7, sp, #0
 477              	.LCFI12:
 478              		.cfi_def_cfa_register 7
 353:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 354:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 479              		.loc 1 354 0
 480 0004 034B     		ldr	r3, .L27
 481 0006 034A     		ldr	r2, .L27
 482 0008 1168     		ldr	r1, [r2]
 483 000a 034A     		ldr	r2, .L27+4
 484 000c 0A40     		and	r2, r1
 485 000e 1A60     		str	r2, [r3]
 355:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 356:.\Generated_Source\PSoC4/ADC.c **** }
 486              		.loc 1 356 0
 487 0010 BD46     		mov	sp, r7
 488              		@ sp needed for prologue
 489 0012 80BD     		pop	{r7, pc}
 490              	.L28:
 491              		.align	2
 492              	.L27:
 493 0014 04001A40 		.word	1075445764
 494 0018 FFFFFEFF 		.word	-65537
 495              		.cfi_endproc
 496              	.LFE5:
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 16


 497              		.size	ADC_StopConvert, .-ADC_StopConvert
 498              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 499              		.align	2
 500              		.global	ADC_IsEndConversion
 501              		.code	16
 502              		.thumb_func
 503              		.type	ADC_IsEndConversion, %function
 504              	ADC_IsEndConversion:
 505              	.LFB6:
 357:.\Generated_Source\PSoC4/ADC.c **** 
 358:.\Generated_Source\PSoC4/ADC.c **** 
 359:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 360:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 361:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 362:.\Generated_Source\PSoC4/ADC.c **** *
 363:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 364:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 365:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 366:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 367:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 368:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 369:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 370:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 371:.\Generated_Source\PSoC4/ADC.c **** *
 372:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 373:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 374:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 375:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 376:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 377:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 378:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 382:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 385:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 386:.\Generated_Source\PSoC4/ADC.c **** {
 506              		.loc 1 386 0
 507              		.cfi_startproc
 508 0000 80B5     		push	{r7, lr}
 509              	.LCFI13:
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 7, -8
 512              		.cfi_offset 14, -4
 513 0002 84B0     		sub	sp, sp, #16
 514              	.LCFI14:
 515              		.cfi_def_cfa_offset 24
 516 0004 00AF     		add	r7, sp, #0
 517              	.LCFI15:
 518              		.cfi_def_cfa_register 7
 519 0006 7860     		str	r0, [r7, #4]
 387:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 520              		.loc 1 387 0
 521 0008 0023     		mov	r3, #0
 522 000a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 17


 388:.\Generated_Source\PSoC4/ADC.c **** 
 389:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 523              		.loc 1 389 0
 524 000c 7A68     		ldr	r2, [r7, #4]
 525 000e 0323     		mov	r3, #3
 526 0010 1340     		and	r3, r2
 527 0012 11D0     		beq	.L30
 528              	.L32:
 390:.\Generated_Source\PSoC4/ADC.c ****     {
 391:.\Generated_Source\PSoC4/ADC.c ****         do
 392:.\Generated_Source\PSoC4/ADC.c ****         {
 393:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 529              		.loc 1 393 0 discriminator 1
 530 0014 0B4B     		ldr	r3, .L34
 531 0016 1A68     		ldr	r2, [r3]
 532 0018 0123     		mov	r3, #1
 533 001a 1340     		and	r3, r2
 534 001c FB60     		str	r3, [r7, #12]
 394:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 535              		.loc 1 394 0 discriminator 1
 536 001e FB68     		ldr	r3, [r7, #12]
 537 0020 002B     		cmp	r3, #0
 538 0022 03D1     		bne	.L31
 539 0024 7A68     		ldr	r2, [r7, #4]
 540 0026 0223     		mov	r3, #2
 541 0028 1340     		and	r3, r2
 542 002a F3D1     		bne	.L32
 543              	.L31:
 395:.\Generated_Source\PSoC4/ADC.c **** 
 396:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 544              		.loc 1 396 0
 545 002c FB68     		ldr	r3, [r7, #12]
 546 002e 002B     		cmp	r3, #0
 547 0030 02D0     		beq	.L30
 397:.\Generated_Source\PSoC4/ADC.c ****         {
 398:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 399:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 548              		.loc 1 399 0
 549 0032 044B     		ldr	r3, .L34
 550 0034 0122     		mov	r2, #1
 551 0036 1A60     		str	r2, [r3]
 552              	.L30:
 400:.\Generated_Source\PSoC4/ADC.c ****         }
 401:.\Generated_Source\PSoC4/ADC.c ****     }
 402:.\Generated_Source\PSoC4/ADC.c **** 
 403:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 404:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 405:.\Generated_Source\PSoC4/ADC.c ****         {
 406:.\Generated_Source\PSoC4/ADC.c ****             do
 407:.\Generated_Source\PSoC4/ADC.c ****             {
 408:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 409:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) != 0u) &&
 410:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 411:.\Generated_Source\PSoC4/ADC.c **** 
 412:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 413:.\Generated_Source\PSoC4/ADC.c ****             {
 414:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 18


 415:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 416:.\Generated_Source\PSoC4/ADC.c ****             }
 417:.\Generated_Source\PSoC4/ADC.c ****         }
 418:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 419:.\Generated_Source\PSoC4/ADC.c **** 
 420:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 553              		.loc 1 420 0
 554 0038 FB68     		ldr	r3, [r7, #12]
 421:.\Generated_Source\PSoC4/ADC.c **** }
 555              		.loc 1 421 0
 556 003a 181C     		mov	r0, r3
 557 003c BD46     		mov	sp, r7
 558 003e 04B0     		add	sp, sp, #16
 559              		@ sp needed for prologue
 560 0040 80BD     		pop	{r7, pc}
 561              	.L35:
 562 0042 C046     		.align	2
 563              	.L34:
 564 0044 10021A40 		.word	1075446288
 565              		.cfi_endproc
 566              	.LFE6:
 567              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 568              		.section	.text.ADC_GetResult16,"ax",%progbits
 569              		.align	2
 570              		.global	ADC_GetResult16
 571              		.code	16
 572              		.thumb_func
 573              		.type	ADC_GetResult16, %function
 574              	ADC_GetResult16:
 575              	.LFB7:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 430:.\Generated_Source\PSoC4/ADC.c **** *
 431:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 432:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 433:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 434:.\Generated_Source\PSoC4/ADC.c **** *
 435:.\Generated_Source\PSoC4/ADC.c **** * Return:
 436:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 437:.\Generated_Source\PSoC4/ADC.c **** *
 438:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 439:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 440:.\Generated_Source\PSoC4/ADC.c **** {
 576              		.loc 1 440 0
 577              		.cfi_startproc
 578 0000 80B5     		push	{r7, lr}
 579              	.LCFI16:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 19


 584              	.LCFI17:
 585              		.cfi_def_cfa_offset 24
 586 0004 00AF     		add	r7, sp, #0
 587              	.LCFI18:
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
 441:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 442:.\Generated_Source\PSoC4/ADC.c **** 
 443:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 444:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 590              		.loc 1 444 0
 591 0008 7B68     		ldr	r3, [r7, #4]
 592 000a 002B     		cmp	r3, #0
 593 000c 02D0     		beq	.L37
 594              		.loc 1 444 0 is_stmt 0 discriminator 1
 595 000e 0020     		mov	r0, #0
 596 0010 FFF7FEFF 		bl	CyHalt
 597              	.L37:
 445:.\Generated_Source\PSoC4/ADC.c **** 
 446:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 598              		.loc 1 446 0 is_stmt 1
 599 0014 7B68     		ldr	r3, [r7, #4]
 600 0016 002B     		cmp	r3, #0
 601 0018 08D1     		bne	.L38
 447:.\Generated_Source\PSoC4/ADC.c ****     {
 448:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 602              		.loc 1 448 0
 603 001a 7B68     		ldr	r3, [r7, #4]
 604 001c 9B00     		lsl	r3, r3, #2
 605 001e 084A     		ldr	r2, .L41
 606 0020 9B18     		add	r3, r3, r2
 607 0022 1B68     		ldr	r3, [r3]
 608 0024 1B04     		lsl	r3, r3, #16
 609 0026 1B0C     		lsr	r3, r3, #16
 610 0028 FB60     		str	r3, [r7, #12]
 611 002a 01E0     		b	.L39
 612              	.L38:
 449:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 450:.\Generated_Source\PSoC4/ADC.c ****     }
 451:.\Generated_Source\PSoC4/ADC.c ****     else
 452:.\Generated_Source\PSoC4/ADC.c ****     {
 453:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 454:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 455:.\Generated_Source\PSoC4/ADC.c ****         #else
 456:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 613              		.loc 1 456 0
 614 002c 0023     		mov	r3, #0
 615 002e FB60     		str	r3, [r7, #12]
 616              	.L39:
 457:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 458:.\Generated_Source\PSoC4/ADC.c ****     }
 459:.\Generated_Source\PSoC4/ADC.c **** 
 460:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 617              		.loc 1 460 0
 618 0030 FB68     		ldr	r3, [r7, #12]
 619 0032 9BB2     		uxth	r3, r3
 620 0034 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 20


 461:.\Generated_Source\PSoC4/ADC.c **** }
 621              		.loc 1 461 0
 622 0036 181C     		mov	r0, r3
 623 0038 BD46     		mov	sp, r7
 624 003a 04B0     		add	sp, sp, #16
 625              		@ sp needed for prologue
 626 003c 80BD     		pop	{r7, pc}
 627              	.L42:
 628 003e C046     		.align	2
 629              	.L41:
 630 0040 80011A40 		.word	1075446144
 631              		.cfi_endproc
 632              	.LFE7:
 633              		.size	ADC_GetResult16, .-ADC_GetResult16
 634              		.section	.text.ADC_SetChanMask,"ax",%progbits
 635              		.align	2
 636              		.global	ADC_SetChanMask
 637              		.code	16
 638              		.thumb_func
 639              		.type	ADC_SetChanMask, %function
 640              	ADC_SetChanMask:
 641              	.LFB8:
 462:.\Generated_Source\PSoC4/ADC.c **** 
 463:.\Generated_Source\PSoC4/ADC.c **** 
 464:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 465:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 466:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 469:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 470:.\Generated_Source\PSoC4/ADC.c **** *
 471:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 472:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 473:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 474:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 475:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 476:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 477:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 478:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 479:.\Generated_Source\PSoC4/ADC.c **** *
 480:.\Generated_Source\PSoC4/ADC.c **** * Return:
 481:.\Generated_Source\PSoC4/ADC.c **** *  None.
 482:.\Generated_Source\PSoC4/ADC.c **** *
 483:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 484:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 485:.\Generated_Source\PSoC4/ADC.c **** {
 642              		.loc 1 485 0
 643              		.cfi_startproc
 644 0000 80B5     		push	{r7, lr}
 645              	.LCFI19:
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 82B0     		sub	sp, sp, #8
 650              	.LCFI20:
 651              		.cfi_def_cfa_offset 16
 652 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 21


 653              	.LCFI21:
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 486:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 656              		.loc 1 486 0
 657 0008 034B     		ldr	r3, .L44
 658 000a 7968     		ldr	r1, [r7, #4]
 659 000c 0122     		mov	r2, #1
 660 000e 0A40     		and	r2, r1
 661 0010 1A60     		str	r2, [r3]
 487:.\Generated_Source\PSoC4/ADC.c **** }
 662              		.loc 1 487 0
 663 0012 BD46     		mov	sp, r7
 664 0014 02B0     		add	sp, sp, #8
 665              		@ sp needed for prologue
 666 0016 80BD     		pop	{r7, pc}
 667              	.L45:
 668              		.align	2
 669              	.L44:
 670 0018 20001A40 		.word	1075445792
 671              		.cfi_endproc
 672              	.LFE8:
 673              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 674              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 675              		.align	2
 676              		.global	ADC_SetLowLimit
 677              		.code	16
 678              		.thumb_func
 679              		.type	ADC_SetLowLimit, %function
 680              	ADC_SetLowLimit:
 681              	.LFB9:
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 490:.\Generated_Source\PSoC4/ADC.c **** 
 491:.\Generated_Source\PSoC4/ADC.c **** 
 492:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 493:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 494:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 495:.\Generated_Source\PSoC4/ADC.c ****     *
 496:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 497:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 498:.\Generated_Source\PSoC4/ADC.c ****     *
 499:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 500:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 501:.\Generated_Source\PSoC4/ADC.c ****     *
 502:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 503:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 504:.\Generated_Source\PSoC4/ADC.c ****     *
 505:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 506:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 507:.\Generated_Source\PSoC4/ADC.c ****     {
 508:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 509:.\Generated_Source\PSoC4/ADC.c ****     }
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 512:.\Generated_Source\PSoC4/ADC.c **** 
 513:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 22


 514:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 516:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 517:.\Generated_Source\PSoC4/ADC.c **** *
 518:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 519:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 520:.\Generated_Source\PSoC4/ADC.c **** *
 521:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 522:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 523:.\Generated_Source\PSoC4/ADC.c **** *
 524:.\Generated_Source\PSoC4/ADC.c **** * Return:
 525:.\Generated_Source\PSoC4/ADC.c **** *  None.
 526:.\Generated_Source\PSoC4/ADC.c **** *
 527:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 528:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 529:.\Generated_Source\PSoC4/ADC.c **** {
 682              		.loc 1 529 0
 683              		.cfi_startproc
 684 0000 80B5     		push	{r7, lr}
 685              	.LCFI22:
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 7, -8
 688              		.cfi_offset 14, -4
 689 0002 82B0     		sub	sp, sp, #8
 690              	.LCFI23:
 691              		.cfi_def_cfa_offset 16
 692 0004 00AF     		add	r7, sp, #0
 693              	.LCFI24:
 694              		.cfi_def_cfa_register 7
 695 0006 7860     		str	r0, [r7, #4]
 530:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 696              		.loc 1 530 0
 697 0008 084B     		ldr	r3, .L47
 698 000a 084A     		ldr	r2, .L47
 699 000c 1268     		ldr	r2, [r2]
 700 000e 120C     		lsr	r2, r2, #16
 701 0010 1204     		lsl	r2, r2, #16
 702 0012 1A60     		str	r2, [r3]
 531:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 703              		.loc 1 531 0
 704 0014 054B     		ldr	r3, .L47
 705 0016 054A     		ldr	r2, .L47
 706 0018 1168     		ldr	r1, [r2]
 707 001a 7A68     		ldr	r2, [r7, #4]
 708 001c 1204     		lsl	r2, r2, #16
 709 001e 120C     		lsr	r2, r2, #16
 710 0020 0A43     		orr	r2, r1
 711 0022 1A60     		str	r2, [r3]
 532:.\Generated_Source\PSoC4/ADC.c **** }
 712              		.loc 1 532 0
 713 0024 BD46     		mov	sp, r7
 714 0026 02B0     		add	sp, sp, #8
 715              		@ sp needed for prologue
 716 0028 80BD     		pop	{r7, pc}
 717              	.L48:
 718 002a C046     		.align	2
 719              	.L47:
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 23


 720 002c 18001A40 		.word	1075445784
 721              		.cfi_endproc
 722              	.LFE9:
 723              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 724              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 725              		.align	2
 726              		.global	ADC_SetHighLimit
 727              		.code	16
 728              		.thumb_func
 729              		.type	ADC_SetHighLimit, %function
 730              	ADC_SetHighLimit:
 731              	.LFB10:
 533:.\Generated_Source\PSoC4/ADC.c **** 
 534:.\Generated_Source\PSoC4/ADC.c **** 
 535:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 536:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 537:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 538:.\Generated_Source\PSoC4/ADC.c **** *
 539:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 540:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 541:.\Generated_Source\PSoC4/ADC.c **** *
 542:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 543:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 732              		.loc 1 550 0
 733              		.cfi_startproc
 734 0000 80B5     		push	{r7, lr}
 735              	.LCFI25:
 736              		.cfi_def_cfa_offset 8
 737              		.cfi_offset 7, -8
 738              		.cfi_offset 14, -4
 739 0002 82B0     		sub	sp, sp, #8
 740              	.LCFI26:
 741              		.cfi_def_cfa_offset 16
 742 0004 00AF     		add	r7, sp, #0
 743              	.LCFI27:
 744              		.cfi_def_cfa_register 7
 745 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 746              		.loc 1 551 0
 747 0008 074B     		ldr	r3, .L50
 748 000a 074A     		ldr	r2, .L50
 749 000c 1268     		ldr	r2, [r2]
 750 000e 1204     		lsl	r2, r2, #16
 751 0010 120C     		lsr	r2, r2, #16
 752 0012 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 753              		.loc 1 552 0
 754 0014 044B     		ldr	r3, .L50
 755 0016 044A     		ldr	r2, .L50
 756 0018 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 24


 757 001a 7A68     		ldr	r2, [r7, #4]
 758 001c 1204     		lsl	r2, r2, #16
 759 001e 0A43     		orr	r2, r1
 760 0020 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/ADC.c **** }
 761              		.loc 1 553 0
 762 0022 BD46     		mov	sp, r7
 763 0024 02B0     		add	sp, sp, #8
 764              		@ sp needed for prologue
 765 0026 80BD     		pop	{r7, pc}
 766              	.L51:
 767              		.align	2
 768              	.L50:
 769 0028 18001A40 		.word	1075445784
 770              		.cfi_endproc
 771              	.LFE10:
 772              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 773              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 774              		.align	2
 775              		.global	ADC_SetLimitMask
 776              		.code	16
 777              		.thumb_func
 778              		.type	ADC_SetLimitMask, %function
 779              	ADC_SetLimitMask:
 780              	.LFB11:
 554:.\Generated_Source\PSoC4/ADC.c **** 
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 557:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 558:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 559:.\Generated_Source\PSoC4/ADC.c **** *
 560:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 561:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 562:.\Generated_Source\PSoC4/ADC.c **** *
 563:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 564:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 565:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 566:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 567:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 568:.\Generated_Source\PSoC4/ADC.c **** *
 569:.\Generated_Source\PSoC4/ADC.c **** * Return:
 570:.\Generated_Source\PSoC4/ADC.c **** *  None.
 571:.\Generated_Source\PSoC4/ADC.c **** *
 572:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 573:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 574:.\Generated_Source\PSoC4/ADC.c **** {
 781              		.loc 1 574 0
 782              		.cfi_startproc
 783 0000 80B5     		push	{r7, lr}
 784              	.LCFI28:
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
 788 0002 82B0     		sub	sp, sp, #8
 789              	.LCFI29:
 790              		.cfi_def_cfa_offset 16
 791 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 25


 792              	.LCFI30:
 793              		.cfi_def_cfa_register 7
 794 0006 7860     		str	r0, [r7, #4]
 575:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 795              		.loc 1 575 0
 796 0008 034B     		ldr	r3, .L53
 797 000a 7968     		ldr	r1, [r7, #4]
 798 000c 0122     		mov	r2, #1
 799 000e 0A40     		and	r2, r1
 800 0010 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/ADC.c **** }
 801              		.loc 1 576 0
 802 0012 BD46     		mov	sp, r7
 803 0014 02B0     		add	sp, sp, #8
 804              		@ sp needed for prologue
 805 0016 80BD     		pop	{r7, pc}
 806              	.L54:
 807              		.align	2
 808              	.L53:
 809 0018 38021A40 		.word	1075446328
 810              		.cfi_endproc
 811              	.LFE11:
 812              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 813              		.section	.text.ADC_SetSatMask,"ax",%progbits
 814              		.align	2
 815              		.global	ADC_SetSatMask
 816              		.code	16
 817              		.thumb_func
 818              		.type	ADC_SetSatMask, %function
 819              	ADC_SetSatMask:
 820              	.LFB12:
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 588:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 589:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 590:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** * Return:
 593:.\Generated_Source\PSoC4/ADC.c **** *  None.
 594:.\Generated_Source\PSoC4/ADC.c **** *
 595:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 597:.\Generated_Source\PSoC4/ADC.c **** {
 821              		.loc 1 597 0
 822              		.cfi_startproc
 823 0000 80B5     		push	{r7, lr}
 824              	.LCFI31:
 825              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 26


 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 82B0     		sub	sp, sp, #8
 829              	.LCFI32:
 830              		.cfi_def_cfa_offset 16
 831 0004 00AF     		add	r7, sp, #0
 832              	.LCFI33:
 833              		.cfi_def_cfa_register 7
 834 0006 7860     		str	r0, [r7, #4]
 598:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 835              		.loc 1 598 0
 836 0008 034B     		ldr	r3, .L56
 837 000a 7968     		ldr	r1, [r7, #4]
 838 000c 0122     		mov	r2, #1
 839 000e 0A40     		and	r2, r1
 840 0010 1A60     		str	r2, [r3]
 599:.\Generated_Source\PSoC4/ADC.c **** }
 841              		.loc 1 599 0
 842 0012 BD46     		mov	sp, r7
 843 0014 02B0     		add	sp, sp, #8
 844              		@ sp needed for prologue
 845 0016 80BD     		pop	{r7, pc}
 846              	.L57:
 847              		.align	2
 848              	.L56:
 849 0018 28021A40 		.word	1075446312
 850              		.cfi_endproc
 851              	.LFE12:
 852              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 853              		.section	.text.ADC_SetOffset,"ax",%progbits
 854              		.align	2
 855              		.global	ADC_SetOffset
 856              		.code	16
 857              		.thumb_func
 858              		.type	ADC_SetOffset, %function
 859              	ADC_SetOffset:
 860              	.LFB13:
 600:.\Generated_Source\PSoC4/ADC.c **** 
 601:.\Generated_Source\PSoC4/ADC.c **** 
 602:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 604:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 605:.\Generated_Source\PSoC4/ADC.c **** *
 606:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 607:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 608:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 609:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 610:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 611:.\Generated_Source\PSoC4/ADC.c **** *
 612:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 613:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 614:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 615:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 616:.\Generated_Source\PSoC4/ADC.c **** *
 617:.\Generated_Source\PSoC4/ADC.c **** * Return:
 618:.\Generated_Source\PSoC4/ADC.c **** *  None.
 619:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 27


 620:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 621:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 622:.\Generated_Source\PSoC4/ADC.c **** *
 623:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 624:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 625:.\Generated_Source\PSoC4/ADC.c **** {
 861              		.loc 1 625 0
 862              		.cfi_startproc
 863 0000 80B5     		push	{r7, lr}
 864              	.LCFI34:
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 7, -8
 867              		.cfi_offset 14, -4
 868 0002 82B0     		sub	sp, sp, #8
 869              	.LCFI35:
 870              		.cfi_def_cfa_offset 16
 871 0004 00AF     		add	r7, sp, #0
 872              	.LCFI36:
 873              		.cfi_def_cfa_register 7
 874 0006 7860     		str	r0, [r7, #4]
 875 0008 0A1C     		mov	r2, r1
 876 000a BB1C     		add	r3, r7, #2
 877 000c 1A80     		strh	r2, [r3]
 626:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 627:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 878              		.loc 1 627 0
 879 000e 7B68     		ldr	r3, [r7, #4]
 880 0010 002B     		cmp	r3, #0
 881 0012 02D0     		beq	.L59
 882              		.loc 1 627 0 is_stmt 0 discriminator 1
 883 0014 0020     		mov	r0, #0
 884 0016 FFF7FEFF 		bl	CyHalt
 885              	.L59:
 628:.\Generated_Source\PSoC4/ADC.c **** 
 629:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 886              		.loc 1 629 0 is_stmt 1
 887 001a 044B     		ldr	r3, .L60
 888 001c 7A68     		ldr	r2, [r7, #4]
 889 001e 5200     		lsl	r2, r2, #1
 890 0020 B91C     		add	r1, r7, #2
 891 0022 0988     		ldrh	r1, [r1]
 892 0024 D152     		strh	r1, [r2, r3]
 630:.\Generated_Source\PSoC4/ADC.c **** }
 893              		.loc 1 630 0
 894 0026 BD46     		mov	sp, r7
 895 0028 02B0     		add	sp, sp, #8
 896              		@ sp needed for prologue
 897 002a 80BD     		pop	{r7, pc}
 898              	.L61:
 899              		.align	2
 900              	.L60:
 901 002c 00000000 		.word	ADC_offset
 902              		.cfi_endproc
 903              	.LFE13:
 904              		.size	ADC_SetOffset, .-ADC_SetOffset
 905              		.section	.text.ADC_SetGain,"ax",%progbits
 906              		.align	2
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 28


 907              		.global	ADC_SetGain
 908              		.code	16
 909              		.thumb_func
 910              		.type	ADC_SetGain, %function
 911              	ADC_SetGain:
 912              	.LFB14:
 631:.\Generated_Source\PSoC4/ADC.c **** 
 632:.\Generated_Source\PSoC4/ADC.c **** 
 633:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 634:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 635:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 638:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 639:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 640:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 641:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 642:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 643:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 644:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 645:.\Generated_Source\PSoC4/ADC.c **** *
 646:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 647:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 648:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts 
 655:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 659:.\Generated_Source\PSoC4/ADC.c **** {
 913              		.loc 1 659 0
 914              		.cfi_startproc
 915 0000 80B5     		push	{r7, lr}
 916              	.LCFI37:
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 920 0002 82B0     		sub	sp, sp, #8
 921              	.LCFI38:
 922              		.cfi_def_cfa_offset 16
 923 0004 00AF     		add	r7, sp, #0
 924              	.LCFI39:
 925              		.cfi_def_cfa_register 7
 926 0006 7860     		str	r0, [r7, #4]
 927 0008 3960     		str	r1, [r7]
 660:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 661:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 928              		.loc 1 661 0
 929 000a 7B68     		ldr	r3, [r7, #4]
 930 000c 002B     		cmp	r3, #0
 931 000e 02D0     		beq	.L63
 932              		.loc 1 661 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 29


 933 0010 0020     		mov	r0, #0
 934 0012 FFF7FEFF 		bl	CyHalt
 935              	.L63:
 662:.\Generated_Source\PSoC4/ADC.c **** 
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 936              		.loc 1 663 0 is_stmt 1
 937 0016 044B     		ldr	r3, .L64
 938 0018 7A68     		ldr	r2, [r7, #4]
 939 001a 9200     		lsl	r2, r2, #2
 940 001c 3968     		ldr	r1, [r7]
 941 001e D150     		str	r1, [r2, r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 942              		.loc 1 664 0
 943 0020 BD46     		mov	sp, r7
 944 0022 02B0     		add	sp, sp, #8
 945              		@ sp needed for prologue
 946 0024 80BD     		pop	{r7, pc}
 947              	.L65:
 948 0026 C046     		.align	2
 949              	.L64:
 950 0028 00000000 		.word	ADC_countsPer10Volt
 951              		.cfi_endproc
 952              	.LFE14:
 953              		.size	ADC_SetGain, .-ADC_SetGain
 954              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 955              		.align	2
 956              		.global	ADC_CountsTo_mVolts
 957              		.code	16
 958              		.thumb_func
 959              		.type	ADC_CountsTo_mVolts, %function
 960              	ADC_CountsTo_mVolts:
 961              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 668:.\Generated_Source\PSoC4/ADC.c **** 
 669:.\Generated_Source\PSoC4/ADC.c **** 
 670:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 671:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 672:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 673:.\Generated_Source\PSoC4/ADC.c ****     *
 674:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 675:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 676:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 677:.\Generated_Source\PSoC4/ADC.c ****     *
 678:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 679:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 680:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 681:.\Generated_Source\PSoC4/ADC.c ****     *
 682:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 683:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 684:.\Generated_Source\PSoC4/ADC.c ****     *
 685:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 687:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 688:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 689:.\Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 30


 690:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 692:.\Generated_Source\PSoC4/ADC.c ****     {
 962              		.loc 1 692 0
 963              		.cfi_startproc
 964 0000 80B5     		push	{r7, lr}
 965              	.LCFI40:
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 84B0     		sub	sp, sp, #16
 970              	.LCFI41:
 971              		.cfi_def_cfa_offset 24
 972 0004 00AF     		add	r7, sp, #0
 973              	.LCFI42:
 974              		.cfi_def_cfa_register 7
 975 0006 7860     		str	r0, [r7, #4]
 976 0008 0A1C     		mov	r2, r1
 977 000a BB1C     		add	r3, r7, #2
 978 000c 1A80     		strh	r2, [r3]
 693:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 694:.\Generated_Source\PSoC4/ADC.c **** 
 695:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 696:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 979              		.loc 1 696 0
 980 000e 7B68     		ldr	r3, [r7, #4]
 981 0010 002B     		cmp	r3, #0
 982 0012 02D0     		beq	.L67
 983              		.loc 1 696 0 is_stmt 0 discriminator 1
 984 0014 0020     		mov	r0, #0
 985 0016 FFF7FEFF 		bl	CyHalt
 986              	.L67:
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 699:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 700:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 987              		.loc 1 700 0 is_stmt 1
 988 001a 274B     		ldr	r3, .L75
 989 001c 7A68     		ldr	r2, [r7, #4]
 990 001e 9200     		lsl	r2, r2, #2
 991 0020 D258     		ldr	r2, [r2, r3]
 992 0022 8023     		mov	r3, #128
 993 0024 DB00     		lsl	r3, r3, #3
 994 0026 1340     		and	r3, r2
 995 0028 08D0     		beq	.L68
 701:.\Generated_Source\PSoC4/ADC.c ****             {
 702:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 996              		.loc 1 702 0
 997 002a BA1C     		add	r2, r7, #2
 998 002c BB1C     		add	r3, r7, #2
 999 002e 0021     		mov	r1, #0
 1000 0030 5B5E     		ldrsh	r3, [r3, r1]
 1001 0032 002B     		cmp	r3, #0
 1002 0034 00DA     		bge	.L69
 1003 0036 FF33     		add	r3, r3, #255
 1004              	.L69:
 1005 0038 1B12     		asr	r3, r3, #8
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 31


 1006 003a 1380     		strh	r3, [r2]
 1007              	.L68:
 703:.\Generated_Source\PSoC4/ADC.c ****             }    
 704:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 705:.\Generated_Source\PSoC4/ADC.c **** 
 706:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 707:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1008              		.loc 1 707 0
 1009 003c BB1C     		add	r3, r7, #2
 1010 003e 1A88     		ldrh	r2, [r3]
 1011 0040 1E4B     		ldr	r3, .L75+4
 1012 0042 7968     		ldr	r1, [r7, #4]
 1013 0044 4900     		lsl	r1, r1, #1
 1014 0046 CB5A     		ldrh	r3, [r1, r3]
 1015 0048 9BB2     		uxth	r3, r3
 1016 004a 9BB2     		uxth	r3, r3
 1017 004c D31A     		sub	r3, r2, r3
 1018 004e 9AB2     		uxth	r2, r3
 1019 0050 BB1C     		add	r3, r7, #2
 1020 0052 1A80     		strh	r2, [r3]
 708:.\Generated_Source\PSoC4/ADC.c **** 
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1021              		.loc 1 709 0
 1022 0054 BB1C     		add	r3, r7, #2
 1023 0056 0022     		mov	r2, #0
 1024 0058 9B5E     		ldrsh	r3, [r3, r2]
 1025 005a 194A     		ldr	r2, .L75+8
 1026 005c 5A43     		mul	r2, r3
 710:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) )) 
 1027              		.loc 1 710 0
 1028 005e BB1C     		add	r3, r7, #2
 1029 0060 0021     		mov	r1, #0
 1030 0062 5B5E     		ldrsh	r3, [r3, r1]
 1031 0064 002B     		cmp	r3, #0
 1032 0066 08DD     		ble	.L70
 1033              		.loc 1 710 0 is_stmt 0 discriminator 1
 1034 0068 164B     		ldr	r3, .L75+12
 1035 006a 7968     		ldr	r1, [r7, #4]
 1036 006c 8900     		lsl	r1, r1, #2
 1037 006e CB58     		ldr	r3, [r1, r3]
 1038 0070 002B     		cmp	r3, #0
 1039 0072 00DA     		bge	.L71
 1040 0074 0133     		add	r3, r3, #1
 1041              	.L71:
 1042 0076 5B10     		asr	r3, r3, #1
 1043 0078 08E0     		b	.L72
 1044              	.L70:
 1045              		.loc 1 710 0 discriminator 2
 1046 007a 124B     		ldr	r3, .L75+12
 1047 007c 7968     		ldr	r1, [r7, #4]
 1048 007e 8900     		lsl	r1, r1, #2
 1049 0080 CB58     		ldr	r3, [r1, r3]
 1050 0082 002B     		cmp	r3, #0
 1051 0084 00DA     		bge	.L73
 1052 0086 0133     		add	r3, r3, #1
 1053              	.L73:
 1054 0088 5B10     		asr	r3, r3, #1
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 32


 1055 008a 5B42     		neg	r3, r3
 1056              	.L72:
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1057              		.loc 1 709 0 is_stmt 1
 1058 008c D218     		add	r2, r2, r3
 711:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1059              		.loc 1 711 0
 1060 008e 0D4B     		ldr	r3, .L75+12
 1061 0090 7968     		ldr	r1, [r7, #4]
 1062 0092 8900     		lsl	r1, r1, #2
 1063 0094 CB58     		ldr	r3, [r1, r3]
 1064 0096 101C     		mov	r0, r2
 1065 0098 191C     		mov	r1, r3
 1066 009a FFF7FEFF 		bl	__aeabi_idiv
 1067 009e 031C     		mov	r3, r0
 1068 00a0 1A1C     		mov	r2, r3
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1069              		.loc 1 709 0
 1070 00a2 3B1C     		mov	r3, r7
 1071 00a4 0E33     		add	r3, r3, #14
 1072 00a6 1A80     		strh	r2, [r3]
 712:.\Generated_Source\PSoC4/ADC.c **** 
 713:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1073              		.loc 1 713 0
 1074 00a8 3B1C     		mov	r3, r7
 1075 00aa 0E33     		add	r3, r3, #14
 1076 00ac 1B88     		ldrh	r3, [r3]
 1077 00ae 1BB2     		sxth	r3, r3
 714:.\Generated_Source\PSoC4/ADC.c ****     }
 1078              		.loc 1 714 0
 1079 00b0 181C     		mov	r0, r3
 1080 00b2 BD46     		mov	sp, r7
 1081 00b4 04B0     		add	sp, sp, #16
 1082              		@ sp needed for prologue
 1083 00b6 80BD     		pop	{r7, pc}
 1084              	.L76:
 1085              		.align	2
 1086              	.L75:
 1087 00b8 00000000 		.word	ADC_channelsConfig
 1088 00bc 00000000 		.word	ADC_offset
 1089 00c0 10270000 		.word	10000
 1090 00c4 00000000 		.word	ADC_countsPer10Volt
 1091              		.cfi_endproc
 1092              	.LFE15:
 1093              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1094              		.global	__aeabi_lmul
 1095              		.global	__aeabi_ldivmod
 1096              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1097              		.align	2
 1098              		.global	ADC_CountsTo_uVolts
 1099              		.code	16
 1100              		.thumb_func
 1101              		.type	ADC_CountsTo_uVolts, %function
 1102              	ADC_CountsTo_uVolts:
 1103              	.LFB16:
 715:.\Generated_Source\PSoC4/ADC.c **** 
 716:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 33


 717:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 718:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 719:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 720:.\Generated_Source\PSoC4/ADC.c ****     *
 721:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 722:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 723:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 724:.\Generated_Source\PSoC4/ADC.c ****     *
 725:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 726:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 727:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 728:.\Generated_Source\PSoC4/ADC.c ****     *
 729:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 730:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 731:.\Generated_Source\PSoC4/ADC.c ****     *
 732:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 733:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 734:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 735:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 736:.\Generated_Source\PSoC4/ADC.c ****     *
 737:.\Generated_Source\PSoC4/ADC.c ****     * Theory: 
 738:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 739:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose 
 740:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 741:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 742:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V. 
 743:.\Generated_Source\PSoC4/ADC.c ****     *
 744:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 745:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 746:.\Generated_Source\PSoC4/ADC.c ****     {
 1104              		.loc 1 746 0
 1105              		.cfi_startproc
 1106 0000 B0B5     		push	{r4, r5, r7, lr}
 1107              	.LCFI43:
 1108              		.cfi_def_cfa_offset 16
 1109              		.cfi_offset 4, -16
 1110              		.cfi_offset 5, -12
 1111              		.cfi_offset 7, -8
 1112              		.cfi_offset 14, -4
 1113 0002 86B0     		sub	sp, sp, #24
 1114              	.LCFI44:
 1115              		.cfi_def_cfa_offset 40
 1116 0004 00AF     		add	r7, sp, #0
 1117              	.LCFI45:
 1118              		.cfi_def_cfa_register 7
 1119 0006 F860     		str	r0, [r7, #12]
 1120 0008 0A1C     		mov	r2, r1
 1121 000a 3B1C     		mov	r3, r7
 1122 000c 0A33     		add	r3, r3, #10
 1123 000e 1A80     		strh	r2, [r3]
 747:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 748:.\Generated_Source\PSoC4/ADC.c **** 
 749:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 750:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1124              		.loc 1 750 0
 1125 0010 FB68     		ldr	r3, [r7, #12]
 1126 0012 002B     		cmp	r3, #0
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 34


 1127 0014 02D0     		beq	.L78
 1128              		.loc 1 750 0 is_stmt 0 discriminator 1
 1129 0016 0020     		mov	r0, #0
 1130 0018 FFF7FEFF 		bl	CyHalt
 1131              	.L78:
 751:.\Generated_Source\PSoC4/ADC.c **** 
 752:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 753:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 754:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 1132              		.loc 1 754 0 is_stmt 1
 1133 001c 264B     		ldr	r3, .L82+8
 1134 001e FA68     		ldr	r2, [r7, #12]
 1135 0020 9200     		lsl	r2, r2, #2
 1136 0022 D258     		ldr	r2, [r2, r3]
 1137 0024 8023     		mov	r3, #128
 1138 0026 DB00     		lsl	r3, r3, #3
 1139 0028 1340     		and	r3, r2
 1140 002a 0AD0     		beq	.L79
 755:.\Generated_Source\PSoC4/ADC.c ****             {
 756:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 1141              		.loc 1 756 0
 1142 002c 3A1C     		mov	r2, r7
 1143 002e 0A32     		add	r2, r2, #10
 1144 0030 3B1C     		mov	r3, r7
 1145 0032 0A33     		add	r3, r3, #10
 1146 0034 0021     		mov	r1, #0
 1147 0036 5B5E     		ldrsh	r3, [r3, r1]
 1148 0038 002B     		cmp	r3, #0
 1149 003a 00DA     		bge	.L80
 1150 003c FF33     		add	r3, r3, #255
 1151              	.L80:
 1152 003e 1B12     		asr	r3, r3, #8
 1153 0040 1380     		strh	r3, [r2]
 1154              	.L79:
 757:.\Generated_Source\PSoC4/ADC.c ****             }    
 758:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 761:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1155              		.loc 1 761 0
 1156 0042 3B1C     		mov	r3, r7
 1157 0044 0A33     		add	r3, r3, #10
 1158 0046 1A88     		ldrh	r2, [r3]
 1159 0048 1C4B     		ldr	r3, .L82+12
 1160 004a F968     		ldr	r1, [r7, #12]
 1161 004c 4900     		lsl	r1, r1, #1
 1162 004e CB5A     		ldrh	r3, [r1, r3]
 1163 0050 9BB2     		uxth	r3, r3
 1164 0052 9BB2     		uxth	r3, r3
 1165 0054 D31A     		sub	r3, r2, r3
 1166 0056 9AB2     		uxth	r2, r3
 1167 0058 3B1C     		mov	r3, r7
 1168 005a 0A33     		add	r3, r3, #10
 1169 005c 1A80     		strh	r2, [r3]
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1170              		.loc 1 763 0
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 35


 1171 005e 3B1C     		mov	r3, r7
 1172 0060 0A33     		add	r3, r3, #10
 1173 0062 0022     		mov	r2, #0
 1174 0064 9B5E     		ldrsh	r3, [r3, r2]
 1175 0066 191C     		mov	r1, r3
 1176 0068 3960     		str	r1, [r7]
 1177 006a DB17     		asr	r3, r3, #31
 1178 006c 7B60     		str	r3, [r7, #4]
 1179 006e 3868     		ldr	r0, [r7]
 1180 0070 7968     		ldr	r1, [r7, #4]
 1181 0072 104B     		ldr	r3, .L82+4
 1182 0074 0E4A     		ldr	r2, .L82
 1183 0076 FFF7FEFF 		bl	__aeabi_lmul
 1184 007a 021C     		mov	r2, r0
 1185 007c 0B1C     		mov	r3, r1
 1186 007e 1049     		ldr	r1, .L82+16
 1187 0080 F868     		ldr	r0, [r7, #12]
 1188 0082 8000     		lsl	r0, r0, #2
 1189 0084 4158     		ldr	r1, [r0, r1]
 1190 0086 0C1C     		mov	r4, r1
 1191 0088 C917     		asr	r1, r1, #31
 1192 008a 0D1C     		mov	r5, r1
 1193 008c 101C     		mov	r0, r2
 1194 008e 191C     		mov	r1, r3
 1195 0090 221C     		mov	r2, r4
 1196 0092 2B1C     		mov	r3, r5
 1197 0094 FFF7FEFF 		bl	__aeabi_ldivmod
 1198 0098 031C     		mov	r3, r0
 1199 009a 0C1C     		mov	r4, r1
 1200 009c 3B61     		str	r3, [r7, #16]
 1201 009e 7C61     		str	r4, [r7, #20]
 764:.\Generated_Source\PSoC4/ADC.c **** 
 765:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1202              		.loc 1 765 0
 1203 00a0 3B69     		ldr	r3, [r7, #16]
 766:.\Generated_Source\PSoC4/ADC.c ****     }
 1204              		.loc 1 766 0
 1205 00a2 181C     		mov	r0, r3
 1206 00a4 BD46     		mov	sp, r7
 1207 00a6 06B0     		add	sp, sp, #24
 1208              		@ sp needed for prologue
 1209 00a8 B0BD     		pop	{r4, r5, r7, pc}
 1210              	.L83:
 1211 00aa C046C046 		.align	3
 1211      C046
 1212              	.L82:
 1213 00b0 80969800 		.word	10000000
 1214 00b4 00000000 		.word	0
 1215 00b8 00000000 		.word	ADC_channelsConfig
 1216 00bc 00000000 		.word	ADC_offset
 1217 00c0 00000000 		.word	ADC_countsPer10Volt
 1218              		.cfi_endproc
 1219              	.LFE16:
 1220              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1221              		.global	__aeabi_i2f
 1222              		.global	__aeabi_fmul
 1223              		.global	__aeabi_fdiv
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 36


 1224 00c4 C046C046 		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1225              		.align	2
 1226              		.global	ADC_CountsTo_Volts
 1227              		.code	16
 1228              		.thumb_func
 1229              		.type	ADC_CountsTo_Volts, %function
 1230              	ADC_CountsTo_Volts:
 1231              	.LFB17:
 767:.\Generated_Source\PSoC4/ADC.c **** 
 768:.\Generated_Source\PSoC4/ADC.c **** 
 769:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 770:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 771:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 772:.\Generated_Source\PSoC4/ADC.c ****     *
 773:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 774:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 775:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 776:.\Generated_Source\PSoC4/ADC.c ****     *
 777:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 778:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 779:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 780:.\Generated_Source\PSoC4/ADC.c ****     *
 781:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 782:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 783:.\Generated_Source\PSoC4/ADC.c ****     *
 784:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 785:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 786:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 787:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 788:.\Generated_Source\PSoC4/ADC.c ****     *
 789:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 791:.\Generated_Source\PSoC4/ADC.c ****     {
 1232              		.loc 1 791 0
 1233              		.cfi_startproc
 1234 0000 90B5     		push	{r4, r7, lr}
 1235              	.LCFI46:
 1236              		.cfi_def_cfa_offset 12
 1237              		.cfi_offset 4, -12
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 85B0     		sub	sp, sp, #20
 1241              	.LCFI47:
 1242              		.cfi_def_cfa_offset 32
 1243 0004 00AF     		add	r7, sp, #0
 1244              	.LCFI48:
 1245              		.cfi_def_cfa_register 7
 1246 0006 7860     		str	r0, [r7, #4]
 1247 0008 0A1C     		mov	r2, r1
 1248 000a BB1C     		add	r3, r7, #2
 1249 000c 1A80     		strh	r2, [r3]
 792:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 793:.\Generated_Source\PSoC4/ADC.c **** 
 794:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 795:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1250              		.loc 1 795 0
 1251 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 37


 1252 0010 002B     		cmp	r3, #0
 1253 0012 02D0     		beq	.L85
 1254              		.loc 1 795 0 is_stmt 0 discriminator 1
 1255 0014 0020     		mov	r0, #0
 1256 0016 FFF7FEFF 		bl	CyHalt
 1257              	.L85:
 796:.\Generated_Source\PSoC4/ADC.c **** 
 797:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 798:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 799:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 1258              		.loc 1 799 0 is_stmt 1
 1259 001a 1E4B     		ldr	r3, .L89
 1260 001c 7A68     		ldr	r2, [r7, #4]
 1261 001e 9200     		lsl	r2, r2, #2
 1262 0020 D258     		ldr	r2, [r2, r3]
 1263 0022 8023     		mov	r3, #128
 1264 0024 DB00     		lsl	r3, r3, #3
 1265 0026 1340     		and	r3, r2
 1266 0028 08D0     		beq	.L86
 800:.\Generated_Source\PSoC4/ADC.c ****             {
 801:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 1267              		.loc 1 801 0
 1268 002a BA1C     		add	r2, r7, #2
 1269 002c BB1C     		add	r3, r7, #2
 1270 002e 0021     		mov	r1, #0
 1271 0030 5B5E     		ldrsh	r3, [r3, r1]
 1272 0032 002B     		cmp	r3, #0
 1273 0034 00DA     		bge	.L87
 1274 0036 FF33     		add	r3, r3, #255
 1275              	.L87:
 1276 0038 1B12     		asr	r3, r3, #8
 1277 003a 1380     		strh	r3, [r2]
 1278              	.L86:
 802:.\Generated_Source\PSoC4/ADC.c ****             }    
 803:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 804:.\Generated_Source\PSoC4/ADC.c **** 
 805:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 806:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1279              		.loc 1 806 0
 1280 003c BB1C     		add	r3, r7, #2
 1281 003e 1A88     		ldrh	r2, [r3]
 1282 0040 154B     		ldr	r3, .L89+4
 1283 0042 7968     		ldr	r1, [r7, #4]
 1284 0044 4900     		lsl	r1, r1, #1
 1285 0046 CB5A     		ldrh	r3, [r1, r3]
 1286 0048 9BB2     		uxth	r3, r3
 1287 004a 9BB2     		uxth	r3, r3
 1288 004c D31A     		sub	r3, r2, r3
 1289 004e 9AB2     		uxth	r2, r3
 1290 0050 BB1C     		add	r3, r7, #2
 1291 0052 1A80     		strh	r2, [r3]
 807:.\Generated_Source\PSoC4/ADC.c **** 
 808:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1292              		.loc 1 808 0
 1293 0054 BB1C     		add	r3, r7, #2
 1294 0056 0022     		mov	r2, #0
 1295 0058 9B5E     		ldrsh	r3, [r3, r2]
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 38


 1296 005a 181C     		mov	r0, r3
 1297 005c FFF7FEFF 		bl	__aeabi_i2f
 1298 0060 031C     		add	r3, r0, #0
 1299 0062 181C     		add	r0, r3, #0
 1300 0064 0D49     		ldr	r1, .L89+8
 1301 0066 FFF7FEFF 		bl	__aeabi_fmul
 1302 006a 031C     		add	r3, r0, #0
 1303 006c 1C1C     		add	r4, r3, #0
 1304 006e 0C4B     		ldr	r3, .L89+12
 1305 0070 7A68     		ldr	r2, [r7, #4]
 1306 0072 9200     		lsl	r2, r2, #2
 1307 0074 D358     		ldr	r3, [r2, r3]
 1308 0076 181C     		mov	r0, r3
 1309 0078 FFF7FEFF 		bl	__aeabi_i2f
 1310 007c 031C     		add	r3, r0, #0
 1311 007e 201C     		add	r0, r4, #0
 1312 0080 191C     		add	r1, r3, #0
 1313 0082 FFF7FEFF 		bl	__aeabi_fdiv
 1314 0086 031C     		add	r3, r0, #0
 1315 0088 FB60     		str	r3, [r7, #12]
 809:.\Generated_Source\PSoC4/ADC.c **** 
 810:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 1316              		.loc 1 810 0
 1317 008a FB68     		ldr	r3, [r7, #12]
 811:.\Generated_Source\PSoC4/ADC.c ****     }
 1318              		.loc 1 811 0
 1319 008c 181C     		add	r0, r3, #0
 1320 008e BD46     		mov	sp, r7
 1321 0090 05B0     		add	sp, sp, #20
 1322              		@ sp needed for prologue
 1323 0092 90BD     		pop	{r4, r7, pc}
 1324              	.L90:
 1325              		.align	2
 1326              	.L89:
 1327 0094 00000000 		.word	ADC_channelsConfig
 1328 0098 00000000 		.word	ADC_offset
 1329 009c 00002041 		.word	1092616192
 1330 00a0 00000000 		.word	ADC_countsPer10Volt
 1331              		.cfi_endproc
 1332              	.LFE17:
 1333              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1334              		.text
 1335              	.Letext0:
 1336              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1337              		.section	.debug_info,"",%progbits
 1338              	.Ldebug_info0:
 1339 0000 D0040000 		.4byte	0x4d0
 1340 0004 0200     		.2byte	0x2
 1341 0006 00000000 		.4byte	.Ldebug_abbrev0
 1342 000a 04       		.byte	0x4
 1343 000b 01       		.uleb128 0x1
 1344 000c E0020000 		.4byte	.LASF59
 1345 0010 01       		.byte	0x1
 1346 0011 27000000 		.4byte	.LASF60
 1347 0015 5D000000 		.4byte	.LASF61
 1348 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1349 001d 00000000 		.4byte	0
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 39


 1350 0021 00000000 		.4byte	0
 1351 0025 00000000 		.4byte	.Ldebug_line0
 1352 0029 02       		.uleb128 0x2
 1353 002a 01       		.byte	0x1
 1354 002b 06       		.byte	0x6
 1355 002c C8020000 		.4byte	.LASF0
 1356 0030 02       		.uleb128 0x2
 1357 0031 01       		.byte	0x1
 1358 0032 08       		.byte	0x8
 1359 0033 19010000 		.4byte	.LASF1
 1360 0037 02       		.uleb128 0x2
 1361 0038 02       		.byte	0x2
 1362 0039 05       		.byte	0x5
 1363 003a C1000000 		.4byte	.LASF2
 1364 003e 02       		.uleb128 0x2
 1365 003f 02       		.byte	0x2
 1366 0040 07       		.byte	0x7
 1367 0041 AE000000 		.4byte	.LASF3
 1368 0045 02       		.uleb128 0x2
 1369 0046 04       		.byte	0x4
 1370 0047 05       		.byte	0x5
 1371 0048 BA020000 		.4byte	.LASF4
 1372 004c 02       		.uleb128 0x2
 1373 004d 04       		.byte	0x4
 1374 004e 07       		.byte	0x7
 1375 004f 3E010000 		.4byte	.LASF5
 1376 0053 02       		.uleb128 0x2
 1377 0054 08       		.byte	0x8
 1378 0055 05       		.byte	0x5
 1379 0056 00000000 		.4byte	.LASF6
 1380 005a 02       		.uleb128 0x2
 1381 005b 08       		.byte	0x8
 1382 005c 07       		.byte	0x7
 1383 005d F9010000 		.4byte	.LASF7
 1384 0061 03       		.uleb128 0x3
 1385 0062 04       		.byte	0x4
 1386 0063 05       		.byte	0x5
 1387 0064 696E7400 		.ascii	"int\000"
 1388 0068 02       		.uleb128 0x2
 1389 0069 04       		.byte	0x4
 1390 006a 07       		.byte	0x7
 1391 006b DA010000 		.4byte	.LASF8
 1392 006f 04       		.uleb128 0x4
 1393 0070 A0020000 		.4byte	.LASF9
 1394 0074 02       		.byte	0x2
 1395 0075 5B       		.byte	0x5b
 1396 0076 30000000 		.4byte	0x30
 1397 007a 04       		.uleb128 0x4
 1398 007b B1010000 		.4byte	.LASF10
 1399 007f 02       		.byte	0x2
 1400 0080 5C       		.byte	0x5c
 1401 0081 3E000000 		.4byte	0x3e
 1402 0085 04       		.uleb128 0x4
 1403 0086 C2010000 		.4byte	.LASF11
 1404 008a 02       		.byte	0x2
 1405 008b 5D       		.byte	0x5d
 1406 008c 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 40


 1407 0090 04       		.uleb128 0x4
 1408 0091 38010000 		.4byte	.LASF12
 1409 0095 02       		.byte	0x2
 1410 0096 5F       		.byte	0x5f
 1411 0097 37000000 		.4byte	0x37
 1412 009b 04       		.uleb128 0x4
 1413 009c 50010000 		.4byte	.LASF13
 1414 00a0 02       		.byte	0x2
 1415 00a1 60       		.byte	0x60
 1416 00a2 45000000 		.4byte	0x45
 1417 00a6 04       		.uleb128 0x4
 1418 00a7 F0000000 		.4byte	.LASF14
 1419 00ab 02       		.byte	0x2
 1420 00ac 61       		.byte	0x61
 1421 00ad B1000000 		.4byte	0xb1
 1422 00b1 02       		.uleb128 0x2
 1423 00b2 04       		.byte	0x4
 1424 00b3 04       		.byte	0x4
 1425 00b4 4D000000 		.4byte	.LASF15
 1426 00b8 02       		.uleb128 0x2
 1427 00b9 08       		.byte	0x8
 1428 00ba 04       		.byte	0x4
 1429 00bb 99010000 		.4byte	.LASF16
 1430 00bf 04       		.uleb128 0x4
 1431 00c0 29030000 		.4byte	.LASF17
 1432 00c4 02       		.byte	0x2
 1433 00c5 66       		.byte	0x66
 1434 00c6 53000000 		.4byte	0x53
 1435 00ca 02       		.uleb128 0x2
 1436 00cb 01       		.byte	0x1
 1437 00cc 08       		.byte	0x8
 1438 00cd C3020000 		.4byte	.LASF18
 1439 00d1 04       		.uleb128 0x4
 1440 00d2 21000000 		.4byte	.LASF19
 1441 00d6 02       		.byte	0x2
 1442 00d7 F2       		.byte	0xf2
 1443 00d8 DC000000 		.4byte	0xdc
 1444 00dc 05       		.uleb128 0x5
 1445 00dd 85000000 		.4byte	0x85
 1446 00e1 02       		.uleb128 0x2
 1447 00e2 04       		.byte	0x4
 1448 00e3 07       		.byte	0x7
 1449 00e4 3C020000 		.4byte	.LASF20
 1450 00e8 06       		.uleb128 0x6
 1451 00e9 01       		.byte	0x1
 1452 00ea 17020000 		.4byte	.LASF24
 1453 00ee 01       		.byte	0x1
 1454 00ef 40       		.byte	0x40
 1455 00f0 01       		.byte	0x1
 1456 00f1 00000000 		.4byte	.LFB0
 1457 00f5 24000000 		.4byte	.LFE0
 1458 00f9 00000000 		.4byte	.LLST0
 1459 00fd 01       		.byte	0x1
 1460 00fe 07       		.uleb128 0x7
 1461 00ff 01       		.byte	0x1
 1462 0100 21020000 		.4byte	.LASF35
 1463 0104 01       		.byte	0x1
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 41


 1464 0105 5F       		.byte	0x5f
 1465 0106 01       		.byte	0x1
 1466 0107 00000000 		.4byte	.LFB1
 1467 010b CC010000 		.4byte	.LFE1
 1468 010f 2C000000 		.4byte	.LLST1
 1469 0113 01       		.byte	0x1
 1470 0114 43010000 		.4byte	0x143
 1471 0118 08       		.uleb128 0x8
 1472 0119 82020000 		.4byte	.LASF21
 1473 011d 01       		.byte	0x1
 1474 011e 61       		.byte	0x61
 1475 011f 85000000 		.4byte	0x85
 1476 0123 02       		.byte	0x2
 1477 0124 91       		.byte	0x91
 1478 0125 6C       		.sleb128 -20
 1479 0126 08       		.uleb128 0x8
 1480 0127 03010000 		.4byte	.LASF22
 1481 012b 01       		.byte	0x1
 1482 012c 62       		.byte	0x62
 1483 012d 85000000 		.4byte	0x85
 1484 0131 02       		.byte	0x2
 1485 0132 91       		.byte	0x91
 1486 0133 64       		.sleb128 -28
 1487 0134 08       		.uleb128 0x8
 1488 0135 F2010000 		.4byte	.LASF23
 1489 0139 01       		.byte	0x1
 1490 013a 63       		.byte	0x63
 1491 013b 9B000000 		.4byte	0x9b
 1492 013f 02       		.byte	0x2
 1493 0140 91       		.byte	0x91
 1494 0141 68       		.sleb128 -24
 1495 0142 00       		.byte	0
 1496 0143 09       		.uleb128 0x9
 1497 0144 01       		.byte	0x1
 1498 0145 E7010000 		.4byte	.LASF25
 1499 0149 01       		.byte	0x1
 1500 014a 1501     		.2byte	0x115
 1501 014c 01       		.byte	0x1
 1502 014d 00000000 		.4byte	.LFB2
 1503 0151 20000000 		.4byte	.LFE2
 1504 0155 64000000 		.4byte	.LLST2
 1505 0159 01       		.byte	0x1
 1506 015a 0A       		.uleb128 0xa
 1507 015b 01       		.byte	0x1
 1508 015c 2F030000 		.4byte	.LASF26
 1509 0160 01       		.byte	0x1
 1510 0161 2C01     		.2byte	0x12c
 1511 0163 01       		.byte	0x1
 1512 0164 00000000 		.4byte	.LFB3
 1513 0168 18000000 		.4byte	.LFE3
 1514 016c 90000000 		.4byte	.LLST3
 1515 0170 01       		.byte	0x1
 1516 0171 0A       		.uleb128 0xa
 1517 0172 01       		.byte	0x1
 1518 0173 6C020000 		.4byte	.LASF27
 1519 0177 01       		.byte	0x1
 1520 0178 4601     		.2byte	0x146
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 42


 1521 017a 01       		.byte	0x1
 1522 017b 00000000 		.4byte	.LFB4
 1523 017f 1C000000 		.4byte	.LFE4
 1524 0183 BC000000 		.4byte	.LLST4
 1525 0187 01       		.byte	0x1
 1526 0188 0A       		.uleb128 0xa
 1527 0189 01       		.byte	0x1
 1528 018a 90020000 		.4byte	.LASF28
 1529 018e 01       		.byte	0x1
 1530 018f 5F01     		.2byte	0x15f
 1531 0191 01       		.byte	0x1
 1532 0192 00000000 		.4byte	.LFB5
 1533 0196 1C000000 		.4byte	.LFE5
 1534 019a E8000000 		.4byte	.LLST5
 1535 019e 01       		.byte	0x1
 1536 019f 0B       		.uleb128 0xb
 1537 01a0 01       		.byte	0x1
 1538 01a1 85010000 		.4byte	.LASF30
 1539 01a5 01       		.byte	0x1
 1540 01a6 8101     		.2byte	0x181
 1541 01a8 01       		.byte	0x1
 1542 01a9 85000000 		.4byte	0x85
 1543 01ad 00000000 		.4byte	.LFB6
 1544 01b1 48000000 		.4byte	.LFE6
 1545 01b5 14010000 		.4byte	.LLST6
 1546 01b9 01       		.byte	0x1
 1547 01ba DD010000 		.4byte	0x1dd
 1548 01be 0C       		.uleb128 0xc
 1549 01bf 88020000 		.4byte	.LASF32
 1550 01c3 01       		.byte	0x1
 1551 01c4 8101     		.2byte	0x181
 1552 01c6 85000000 		.4byte	0x85
 1553 01ca 02       		.byte	0x2
 1554 01cb 91       		.byte	0x91
 1555 01cc 6C       		.sleb128 -20
 1556 01cd 0D       		.uleb128 0xd
 1557 01ce E9000000 		.4byte	.LASF29
 1558 01d2 01       		.byte	0x1
 1559 01d3 8301     		.2byte	0x183
 1560 01d5 85000000 		.4byte	0x85
 1561 01d9 02       		.byte	0x2
 1562 01da 91       		.byte	0x91
 1563 01db 74       		.sleb128 -12
 1564 01dc 00       		.byte	0
 1565 01dd 0E       		.uleb128 0xe
 1566 01de 01       		.byte	0x1
 1567 01df 56010000 		.4byte	.LASF31
 1568 01e3 01       		.byte	0x1
 1569 01e4 B701     		.2byte	0x1b7
 1570 01e6 01       		.byte	0x1
 1571 01e7 90000000 		.4byte	0x90
 1572 01eb 00000000 		.4byte	.LFB7
 1573 01ef 44000000 		.4byte	.LFE7
 1574 01f3 4C010000 		.4byte	.LLST7
 1575 01f7 01       		.byte	0x1
 1576 01f8 1B020000 		.4byte	0x21b
 1577 01fc 0C       		.uleb128 0xc
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 43


 1578 01fd 30020000 		.4byte	.LASF33
 1579 0201 01       		.byte	0x1
 1580 0202 B701     		.2byte	0x1b7
 1581 0204 85000000 		.4byte	0x85
 1582 0208 02       		.byte	0x2
 1583 0209 91       		.byte	0x91
 1584 020a 6C       		.sleb128 -20
 1585 020b 0D       		.uleb128 0xd
 1586 020c 10020000 		.4byte	.LASF34
 1587 0210 01       		.byte	0x1
 1588 0211 B901     		.2byte	0x1b9
 1589 0213 85000000 		.4byte	0x85
 1590 0217 02       		.byte	0x2
 1591 0218 91       		.byte	0x91
 1592 0219 74       		.sleb128 -12
 1593 021a 00       		.byte	0
 1594 021b 0F       		.uleb128 0xf
 1595 021c 01       		.byte	0x1
 1596 021d 66010000 		.4byte	.LASF36
 1597 0221 01       		.byte	0x1
 1598 0222 E401     		.2byte	0x1e4
 1599 0224 01       		.byte	0x1
 1600 0225 00000000 		.4byte	.LFB8
 1601 0229 1C000000 		.4byte	.LFE8
 1602 022d 84010000 		.4byte	.LLST8
 1603 0231 01       		.byte	0x1
 1604 0232 46020000 		.4byte	0x246
 1605 0236 0C       		.uleb128 0xc
 1606 0237 7D020000 		.4byte	.LASF37
 1607 023b 01       		.byte	0x1
 1608 023c E401     		.2byte	0x1e4
 1609 023e 85000000 		.4byte	0x85
 1610 0242 02       		.byte	0x2
 1611 0243 91       		.byte	0x91
 1612 0244 74       		.sleb128 -12
 1613 0245 00       		.byte	0
 1614 0246 0F       		.uleb128 0xf
 1615 0247 01       		.byte	0x1
 1616 0248 D9000000 		.4byte	.LASF38
 1617 024c 01       		.byte	0x1
 1618 024d 1002     		.2byte	0x210
 1619 024f 01       		.byte	0x1
 1620 0250 00000000 		.4byte	.LFB9
 1621 0254 30000000 		.4byte	.LFE9
 1622 0258 BC010000 		.4byte	.LLST9
 1623 025c 01       		.byte	0x1
 1624 025d 71020000 		.4byte	0x271
 1625 0261 0C       		.uleb128 0xc
 1626 0262 A0010000 		.4byte	.LASF39
 1627 0266 01       		.byte	0x1
 1628 0267 1002     		.2byte	0x210
 1629 0269 85000000 		.4byte	0x85
 1630 026d 02       		.byte	0x2
 1631 026e 91       		.byte	0x91
 1632 026f 74       		.sleb128 -12
 1633 0270 00       		.byte	0
 1634 0271 0F       		.uleb128 0xf
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 44


 1635 0272 01       		.byte	0x1
 1636 0273 27010000 		.4byte	.LASF40
 1637 0277 01       		.byte	0x1
 1638 0278 2502     		.2byte	0x225
 1639 027a 01       		.byte	0x1
 1640 027b 00000000 		.4byte	.LFB10
 1641 027f 2C000000 		.4byte	.LFE10
 1642 0283 F4010000 		.4byte	.LLST10
 1643 0287 01       		.byte	0x1
 1644 0288 9C020000 		.4byte	0x29c
 1645 028c 0C       		.uleb128 0xc
 1646 028d 53000000 		.4byte	.LASF41
 1647 0291 01       		.byte	0x1
 1648 0292 2502     		.2byte	0x225
 1649 0294 85000000 		.4byte	0x85
 1650 0298 02       		.byte	0x2
 1651 0299 91       		.byte	0x91
 1652 029a 74       		.sleb128 -12
 1653 029b 00       		.byte	0
 1654 029c 0F       		.uleb128 0xf
 1655 029d 01       		.byte	0x1
 1656 029e C9010000 		.4byte	.LASF42
 1657 02a2 01       		.byte	0x1
 1658 02a3 3D02     		.2byte	0x23d
 1659 02a5 01       		.byte	0x1
 1660 02a6 00000000 		.4byte	.LFB11
 1661 02aa 1C000000 		.4byte	.LFE11
 1662 02ae 2C020000 		.4byte	.LLST11
 1663 02b2 01       		.byte	0x1
 1664 02b3 C7020000 		.4byte	0x2c7
 1665 02b7 0C       		.uleb128 0xc
 1666 02b8 7D020000 		.4byte	.LASF37
 1667 02bc 01       		.byte	0x1
 1668 02bd 3D02     		.2byte	0x23d
 1669 02bf 85000000 		.4byte	0x85
 1670 02c3 02       		.byte	0x2
 1671 02c4 91       		.byte	0x91
 1672 02c5 74       		.sleb128 -12
 1673 02c6 00       		.byte	0
 1674 02c7 0F       		.uleb128 0xf
 1675 02c8 01       		.byte	0x1
 1676 02c9 76010000 		.4byte	.LASF43
 1677 02cd 01       		.byte	0x1
 1678 02ce 5402     		.2byte	0x254
 1679 02d0 01       		.byte	0x1
 1680 02d1 00000000 		.4byte	.LFB12
 1681 02d5 1C000000 		.4byte	.LFE12
 1682 02d9 64020000 		.4byte	.LLST12
 1683 02dd 01       		.byte	0x1
 1684 02de F2020000 		.4byte	0x2f2
 1685 02e2 0C       		.uleb128 0xc
 1686 02e3 7D020000 		.4byte	.LASF37
 1687 02e7 01       		.byte	0x1
 1688 02e8 5402     		.2byte	0x254
 1689 02ea 85000000 		.4byte	0x85
 1690 02ee 02       		.byte	0x2
 1691 02ef 91       		.byte	0x91
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 45


 1692 02f0 74       		.sleb128 -12
 1693 02f1 00       		.byte	0
 1694 02f2 10       		.uleb128 0x10
 1695 02f3 01       		.byte	0x1
 1696 02f4 CB000000 		.4byte	.LASF44
 1697 02f8 01       		.byte	0x1
 1698 02f9 7002     		.2byte	0x270
 1699 02fb 01       		.byte	0x1
 1700 02fc 00000000 		.4byte	.LFB13
 1701 0300 30000000 		.4byte	.LFE13
 1702 0304 9C020000 		.4byte	.LLST13
 1703 0308 01       		.byte	0x1
 1704 0309 2C030000 		.4byte	0x32c
 1705 030d 0C       		.uleb128 0xc
 1706 030e 30020000 		.4byte	.LASF33
 1707 0312 01       		.byte	0x1
 1708 0313 7002     		.2byte	0x270
 1709 0315 85000000 		.4byte	0x85
 1710 0319 02       		.byte	0x2
 1711 031a 91       		.byte	0x91
 1712 031b 74       		.sleb128 -12
 1713 031c 0C       		.uleb128 0xc
 1714 031d 46000000 		.4byte	.LASF45
 1715 0321 01       		.byte	0x1
 1716 0322 7002     		.2byte	0x270
 1717 0324 90000000 		.4byte	0x90
 1718 0328 02       		.byte	0x2
 1719 0329 91       		.byte	0x91
 1720 032a 72       		.sleb128 -14
 1721 032b 00       		.byte	0
 1722 032c 10       		.uleb128 0x10
 1723 032d 01       		.byte	0x1
 1724 032e 0D010000 		.4byte	.LASF46
 1725 0332 01       		.byte	0x1
 1726 0333 9202     		.2byte	0x292
 1727 0335 01       		.byte	0x1
 1728 0336 00000000 		.4byte	.LFB14
 1729 033a 2C000000 		.4byte	.LFE14
 1730 033e D4020000 		.4byte	.LLST14
 1731 0342 01       		.byte	0x1
 1732 0343 66030000 		.4byte	0x366
 1733 0347 0C       		.uleb128 0xc
 1734 0348 30020000 		.4byte	.LASF33
 1735 034c 01       		.byte	0x1
 1736 034d 9202     		.2byte	0x292
 1737 034f 85000000 		.4byte	0x85
 1738 0353 02       		.byte	0x2
 1739 0354 91       		.byte	0x91
 1740 0355 74       		.sleb128 -12
 1741 0356 0C       		.uleb128 0xc
 1742 0357 A9010000 		.4byte	.LASF47
 1743 035b 01       		.byte	0x1
 1744 035c 9202     		.2byte	0x292
 1745 035e 9B000000 		.4byte	0x9b
 1746 0362 02       		.byte	0x2
 1747 0363 91       		.byte	0x91
 1748 0364 70       		.sleb128 -16
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 46


 1749 0365 00       		.byte	0
 1750 0366 0E       		.uleb128 0xe
 1751 0367 01       		.byte	0x1
 1752 0368 93000000 		.4byte	.LASF48
 1753 036c 01       		.byte	0x1
 1754 036d B302     		.2byte	0x2b3
 1755 036f 01       		.byte	0x1
 1756 0370 90000000 		.4byte	0x90
 1757 0374 00000000 		.4byte	.LFB15
 1758 0378 C8000000 		.4byte	.LFE15
 1759 037c 0C030000 		.4byte	.LLST15
 1760 0380 01       		.byte	0x1
 1761 0381 B3030000 		.4byte	0x3b3
 1762 0385 0C       		.uleb128 0xc
 1763 0386 30020000 		.4byte	.LASF33
 1764 038a 01       		.byte	0x1
 1765 038b B302     		.2byte	0x2b3
 1766 038d 85000000 		.4byte	0x85
 1767 0391 02       		.byte	0x2
 1768 0392 91       		.byte	0x91
 1769 0393 6C       		.sleb128 -20
 1770 0394 0C       		.uleb128 0xc
 1771 0395 B8010000 		.4byte	.LASF49
 1772 0399 01       		.byte	0x1
 1773 039a B302     		.2byte	0x2b3
 1774 039c 90000000 		.4byte	0x90
 1775 03a0 02       		.byte	0x2
 1776 03a1 91       		.byte	0x91
 1777 03a2 6A       		.sleb128 -22
 1778 03a3 0D       		.uleb128 0xd
 1779 03a4 35020000 		.4byte	.LASF50
 1780 03a8 01       		.byte	0x1
 1781 03a9 B502     		.2byte	0x2b5
 1782 03ab 90000000 		.4byte	0x90
 1783 03af 02       		.byte	0x2
 1784 03b0 91       		.byte	0x91
 1785 03b1 76       		.sleb128 -10
 1786 03b2 00       		.byte	0
 1787 03b3 0E       		.uleb128 0xe
 1788 03b4 01       		.byte	0x1
 1789 03b5 45020000 		.4byte	.LASF51
 1790 03b9 01       		.byte	0x1
 1791 03ba E902     		.2byte	0x2e9
 1792 03bc 01       		.byte	0x1
 1793 03bd 9B000000 		.4byte	0x9b
 1794 03c1 00000000 		.4byte	.LFB16
 1795 03c5 C4000000 		.4byte	.LFE16
 1796 03c9 44030000 		.4byte	.LLST16
 1797 03cd 01       		.byte	0x1
 1798 03ce 00040000 		.4byte	0x400
 1799 03d2 0C       		.uleb128 0xc
 1800 03d3 30020000 		.4byte	.LASF33
 1801 03d7 01       		.byte	0x1
 1802 03d8 E902     		.2byte	0x2e9
 1803 03da 85000000 		.4byte	0x85
 1804 03de 02       		.byte	0x2
 1805 03df 91       		.byte	0x91
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 47


 1806 03e0 64       		.sleb128 -28
 1807 03e1 0C       		.uleb128 0xc
 1808 03e2 B8010000 		.4byte	.LASF49
 1809 03e6 01       		.byte	0x1
 1810 03e7 E902     		.2byte	0x2e9
 1811 03e9 90000000 		.4byte	0x90
 1812 03ed 02       		.byte	0x2
 1813 03ee 91       		.byte	0x91
 1814 03ef 62       		.sleb128 -30
 1815 03f0 0D       		.uleb128 0xd
 1816 03f1 A7000000 		.4byte	.LASF52
 1817 03f5 01       		.byte	0x1
 1818 03f6 EB02     		.2byte	0x2eb
 1819 03f8 BF000000 		.4byte	0xbf
 1820 03fc 02       		.byte	0x2
 1821 03fd 91       		.byte	0x91
 1822 03fe 68       		.sleb128 -24
 1823 03ff 00       		.byte	0
 1824 0400 0E       		.uleb128 0xe
 1825 0401 01       		.byte	0x1
 1826 0402 59020000 		.4byte	.LASF53
 1827 0406 01       		.byte	0x1
 1828 0407 1603     		.2byte	0x316
 1829 0409 01       		.byte	0x1
 1830 040a A6000000 		.4byte	0xa6
 1831 040e 00000000 		.4byte	.LFB17
 1832 0412 A4000000 		.4byte	.LFE17
 1833 0416 7C030000 		.4byte	.LLST17
 1834 041a 01       		.byte	0x1
 1835 041b 4D040000 		.4byte	0x44d
 1836 041f 0C       		.uleb128 0xc
 1837 0420 30020000 		.4byte	.LASF33
 1838 0424 01       		.byte	0x1
 1839 0425 1603     		.2byte	0x316
 1840 0427 85000000 		.4byte	0x85
 1841 042b 02       		.byte	0x2
 1842 042c 91       		.byte	0x91
 1843 042d 64       		.sleb128 -28
 1844 042e 0C       		.uleb128 0xc
 1845 042f B8010000 		.4byte	.LASF49
 1846 0433 01       		.byte	0x1
 1847 0434 1603     		.2byte	0x316
 1848 0436 90000000 		.4byte	0x90
 1849 043a 02       		.byte	0x2
 1850 043b 91       		.byte	0x91
 1851 043c 62       		.sleb128 -30
 1852 043d 0D       		.uleb128 0xd
 1853 043e 2A020000 		.4byte	.LASF54
 1854 0442 01       		.byte	0x1
 1855 0443 1803     		.2byte	0x318
 1856 0445 A6000000 		.4byte	0xa6
 1857 0449 02       		.byte	0x2
 1858 044a 91       		.byte	0x91
 1859 044b 6C       		.sleb128 -20
 1860 044c 00       		.byte	0
 1861 044d 11       		.uleb128 0x11
 1862 044e 85000000 		.4byte	0x85
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 48


 1863 0452 5D040000 		.4byte	0x45d
 1864 0456 12       		.uleb128 0x12
 1865 0457 E1000000 		.4byte	0xe1
 1866 045b 00       		.byte	0
 1867 045c 00       		.byte	0
 1868 045d 08       		.uleb128 0x8
 1869 045e 0E000000 		.4byte	.LASF55
 1870 0462 01       		.byte	0x1
 1871 0463 22       		.byte	0x22
 1872 0464 6E040000 		.4byte	0x46e
 1873 0468 05       		.byte	0x5
 1874 0469 03       		.byte	0x3
 1875 046a 00000000 		.4byte	ADC_channelsConfig
 1876 046e 13       		.uleb128 0x13
 1877 046f 4D040000 		.4byte	0x44d
 1878 0473 14       		.uleb128 0x14
 1879 0474 D4020000 		.4byte	.LASF56
 1880 0478 01       		.byte	0x1
 1881 0479 19       		.byte	0x19
 1882 047a 6F000000 		.4byte	0x6f
 1883 047e 01       		.byte	0x1
 1884 047f 05       		.byte	0x5
 1885 0480 03       		.byte	0x3
 1886 0481 00000000 		.4byte	ADC_initVar
 1887 0485 11       		.uleb128 0x11
 1888 0486 90000000 		.4byte	0x90
 1889 048a 95040000 		.4byte	0x495
 1890 048e 12       		.uleb128 0x12
 1891 048f E1000000 		.4byte	0xe1
 1892 0493 00       		.byte	0
 1893 0494 00       		.byte	0
 1894 0495 14       		.uleb128 0x14
 1895 0496 F8000000 		.4byte	.LASF57
 1896 049a 01       		.byte	0x1
 1897 049b 1A       		.byte	0x1a
 1898 049c A7040000 		.4byte	0x4a7
 1899 04a0 01       		.byte	0x1
 1900 04a1 05       		.byte	0x5
 1901 04a2 03       		.byte	0x3
 1902 04a3 00000000 		.4byte	ADC_offset
 1903 04a7 05       		.uleb128 0x5
 1904 04a8 85040000 		.4byte	0x485
 1905 04ac 11       		.uleb128 0x11
 1906 04ad 9B000000 		.4byte	0x9b
 1907 04b1 BC040000 		.4byte	0x4bc
 1908 04b5 12       		.uleb128 0x12
 1909 04b6 E1000000 		.4byte	0xe1
 1910 04ba 00       		.byte	0
 1911 04bb 00       		.byte	0
 1912 04bc 14       		.uleb128 0x14
 1913 04bd A6020000 		.4byte	.LASF58
 1914 04c1 01       		.byte	0x1
 1915 04c2 1B       		.byte	0x1b
 1916 04c3 CE040000 		.4byte	0x4ce
 1917 04c7 01       		.byte	0x1
 1918 04c8 05       		.byte	0x5
 1919 04c9 03       		.byte	0x3
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 49


 1920 04ca 00000000 		.4byte	ADC_countsPer10Volt
 1921 04ce 05       		.uleb128 0x5
 1922 04cf AC040000 		.4byte	0x4ac
 1923 04d3 00       		.byte	0
 1924              		.section	.debug_abbrev,"",%progbits
 1925              	.Ldebug_abbrev0:
 1926 0000 01       		.uleb128 0x1
 1927 0001 11       		.uleb128 0x11
 1928 0002 01       		.byte	0x1
 1929 0003 25       		.uleb128 0x25
 1930 0004 0E       		.uleb128 0xe
 1931 0005 13       		.uleb128 0x13
 1932 0006 0B       		.uleb128 0xb
 1933 0007 03       		.uleb128 0x3
 1934 0008 0E       		.uleb128 0xe
 1935 0009 1B       		.uleb128 0x1b
 1936 000a 0E       		.uleb128 0xe
 1937 000b 55       		.uleb128 0x55
 1938 000c 06       		.uleb128 0x6
 1939 000d 11       		.uleb128 0x11
 1940 000e 01       		.uleb128 0x1
 1941 000f 52       		.uleb128 0x52
 1942 0010 01       		.uleb128 0x1
 1943 0011 10       		.uleb128 0x10
 1944 0012 06       		.uleb128 0x6
 1945 0013 00       		.byte	0
 1946 0014 00       		.byte	0
 1947 0015 02       		.uleb128 0x2
 1948 0016 24       		.uleb128 0x24
 1949 0017 00       		.byte	0
 1950 0018 0B       		.uleb128 0xb
 1951 0019 0B       		.uleb128 0xb
 1952 001a 3E       		.uleb128 0x3e
 1953 001b 0B       		.uleb128 0xb
 1954 001c 03       		.uleb128 0x3
 1955 001d 0E       		.uleb128 0xe
 1956 001e 00       		.byte	0
 1957 001f 00       		.byte	0
 1958 0020 03       		.uleb128 0x3
 1959 0021 24       		.uleb128 0x24
 1960 0022 00       		.byte	0
 1961 0023 0B       		.uleb128 0xb
 1962 0024 0B       		.uleb128 0xb
 1963 0025 3E       		.uleb128 0x3e
 1964 0026 0B       		.uleb128 0xb
 1965 0027 03       		.uleb128 0x3
 1966 0028 08       		.uleb128 0x8
 1967 0029 00       		.byte	0
 1968 002a 00       		.byte	0
 1969 002b 04       		.uleb128 0x4
 1970 002c 16       		.uleb128 0x16
 1971 002d 00       		.byte	0
 1972 002e 03       		.uleb128 0x3
 1973 002f 0E       		.uleb128 0xe
 1974 0030 3A       		.uleb128 0x3a
 1975 0031 0B       		.uleb128 0xb
 1976 0032 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 50


 1977 0033 0B       		.uleb128 0xb
 1978 0034 49       		.uleb128 0x49
 1979 0035 13       		.uleb128 0x13
 1980 0036 00       		.byte	0
 1981 0037 00       		.byte	0
 1982 0038 05       		.uleb128 0x5
 1983 0039 35       		.uleb128 0x35
 1984 003a 00       		.byte	0
 1985 003b 49       		.uleb128 0x49
 1986 003c 13       		.uleb128 0x13
 1987 003d 00       		.byte	0
 1988 003e 00       		.byte	0
 1989 003f 06       		.uleb128 0x6
 1990 0040 2E       		.uleb128 0x2e
 1991 0041 00       		.byte	0
 1992 0042 3F       		.uleb128 0x3f
 1993 0043 0C       		.uleb128 0xc
 1994 0044 03       		.uleb128 0x3
 1995 0045 0E       		.uleb128 0xe
 1996 0046 3A       		.uleb128 0x3a
 1997 0047 0B       		.uleb128 0xb
 1998 0048 3B       		.uleb128 0x3b
 1999 0049 0B       		.uleb128 0xb
 2000 004a 27       		.uleb128 0x27
 2001 004b 0C       		.uleb128 0xc
 2002 004c 11       		.uleb128 0x11
 2003 004d 01       		.uleb128 0x1
 2004 004e 12       		.uleb128 0x12
 2005 004f 01       		.uleb128 0x1
 2006 0050 40       		.uleb128 0x40
 2007 0051 06       		.uleb128 0x6
 2008 0052 9642     		.uleb128 0x2116
 2009 0054 0C       		.uleb128 0xc
 2010 0055 00       		.byte	0
 2011 0056 00       		.byte	0
 2012 0057 07       		.uleb128 0x7
 2013 0058 2E       		.uleb128 0x2e
 2014 0059 01       		.byte	0x1
 2015 005a 3F       		.uleb128 0x3f
 2016 005b 0C       		.uleb128 0xc
 2017 005c 03       		.uleb128 0x3
 2018 005d 0E       		.uleb128 0xe
 2019 005e 3A       		.uleb128 0x3a
 2020 005f 0B       		.uleb128 0xb
 2021 0060 3B       		.uleb128 0x3b
 2022 0061 0B       		.uleb128 0xb
 2023 0062 27       		.uleb128 0x27
 2024 0063 0C       		.uleb128 0xc
 2025 0064 11       		.uleb128 0x11
 2026 0065 01       		.uleb128 0x1
 2027 0066 12       		.uleb128 0x12
 2028 0067 01       		.uleb128 0x1
 2029 0068 40       		.uleb128 0x40
 2030 0069 06       		.uleb128 0x6
 2031 006a 9642     		.uleb128 0x2116
 2032 006c 0C       		.uleb128 0xc
 2033 006d 01       		.uleb128 0x1
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 51


 2034 006e 13       		.uleb128 0x13
 2035 006f 00       		.byte	0
 2036 0070 00       		.byte	0
 2037 0071 08       		.uleb128 0x8
 2038 0072 34       		.uleb128 0x34
 2039 0073 00       		.byte	0
 2040 0074 03       		.uleb128 0x3
 2041 0075 0E       		.uleb128 0xe
 2042 0076 3A       		.uleb128 0x3a
 2043 0077 0B       		.uleb128 0xb
 2044 0078 3B       		.uleb128 0x3b
 2045 0079 0B       		.uleb128 0xb
 2046 007a 49       		.uleb128 0x49
 2047 007b 13       		.uleb128 0x13
 2048 007c 02       		.uleb128 0x2
 2049 007d 0A       		.uleb128 0xa
 2050 007e 00       		.byte	0
 2051 007f 00       		.byte	0
 2052 0080 09       		.uleb128 0x9
 2053 0081 2E       		.uleb128 0x2e
 2054 0082 00       		.byte	0
 2055 0083 3F       		.uleb128 0x3f
 2056 0084 0C       		.uleb128 0xc
 2057 0085 03       		.uleb128 0x3
 2058 0086 0E       		.uleb128 0xe
 2059 0087 3A       		.uleb128 0x3a
 2060 0088 0B       		.uleb128 0xb
 2061 0089 3B       		.uleb128 0x3b
 2062 008a 05       		.uleb128 0x5
 2063 008b 27       		.uleb128 0x27
 2064 008c 0C       		.uleb128 0xc
 2065 008d 11       		.uleb128 0x11
 2066 008e 01       		.uleb128 0x1
 2067 008f 12       		.uleb128 0x12
 2068 0090 01       		.uleb128 0x1
 2069 0091 40       		.uleb128 0x40
 2070 0092 06       		.uleb128 0x6
 2071 0093 9642     		.uleb128 0x2116
 2072 0095 0C       		.uleb128 0xc
 2073 0096 00       		.byte	0
 2074 0097 00       		.byte	0
 2075 0098 0A       		.uleb128 0xa
 2076 0099 2E       		.uleb128 0x2e
 2077 009a 00       		.byte	0
 2078 009b 3F       		.uleb128 0x3f
 2079 009c 0C       		.uleb128 0xc
 2080 009d 03       		.uleb128 0x3
 2081 009e 0E       		.uleb128 0xe
 2082 009f 3A       		.uleb128 0x3a
 2083 00a0 0B       		.uleb128 0xb
 2084 00a1 3B       		.uleb128 0x3b
 2085 00a2 05       		.uleb128 0x5
 2086 00a3 27       		.uleb128 0x27
 2087 00a4 0C       		.uleb128 0xc
 2088 00a5 11       		.uleb128 0x11
 2089 00a6 01       		.uleb128 0x1
 2090 00a7 12       		.uleb128 0x12
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 52


 2091 00a8 01       		.uleb128 0x1
 2092 00a9 40       		.uleb128 0x40
 2093 00aa 06       		.uleb128 0x6
 2094 00ab 9742     		.uleb128 0x2117
 2095 00ad 0C       		.uleb128 0xc
 2096 00ae 00       		.byte	0
 2097 00af 00       		.byte	0
 2098 00b0 0B       		.uleb128 0xb
 2099 00b1 2E       		.uleb128 0x2e
 2100 00b2 01       		.byte	0x1
 2101 00b3 3F       		.uleb128 0x3f
 2102 00b4 0C       		.uleb128 0xc
 2103 00b5 03       		.uleb128 0x3
 2104 00b6 0E       		.uleb128 0xe
 2105 00b7 3A       		.uleb128 0x3a
 2106 00b8 0B       		.uleb128 0xb
 2107 00b9 3B       		.uleb128 0x3b
 2108 00ba 05       		.uleb128 0x5
 2109 00bb 27       		.uleb128 0x27
 2110 00bc 0C       		.uleb128 0xc
 2111 00bd 49       		.uleb128 0x49
 2112 00be 13       		.uleb128 0x13
 2113 00bf 11       		.uleb128 0x11
 2114 00c0 01       		.uleb128 0x1
 2115 00c1 12       		.uleb128 0x12
 2116 00c2 01       		.uleb128 0x1
 2117 00c3 40       		.uleb128 0x40
 2118 00c4 06       		.uleb128 0x6
 2119 00c5 9742     		.uleb128 0x2117
 2120 00c7 0C       		.uleb128 0xc
 2121 00c8 01       		.uleb128 0x1
 2122 00c9 13       		.uleb128 0x13
 2123 00ca 00       		.byte	0
 2124 00cb 00       		.byte	0
 2125 00cc 0C       		.uleb128 0xc
 2126 00cd 05       		.uleb128 0x5
 2127 00ce 00       		.byte	0
 2128 00cf 03       		.uleb128 0x3
 2129 00d0 0E       		.uleb128 0xe
 2130 00d1 3A       		.uleb128 0x3a
 2131 00d2 0B       		.uleb128 0xb
 2132 00d3 3B       		.uleb128 0x3b
 2133 00d4 05       		.uleb128 0x5
 2134 00d5 49       		.uleb128 0x49
 2135 00d6 13       		.uleb128 0x13
 2136 00d7 02       		.uleb128 0x2
 2137 00d8 0A       		.uleb128 0xa
 2138 00d9 00       		.byte	0
 2139 00da 00       		.byte	0
 2140 00db 0D       		.uleb128 0xd
 2141 00dc 34       		.uleb128 0x34
 2142 00dd 00       		.byte	0
 2143 00de 03       		.uleb128 0x3
 2144 00df 0E       		.uleb128 0xe
 2145 00e0 3A       		.uleb128 0x3a
 2146 00e1 0B       		.uleb128 0xb
 2147 00e2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 53


 2148 00e3 05       		.uleb128 0x5
 2149 00e4 49       		.uleb128 0x49
 2150 00e5 13       		.uleb128 0x13
 2151 00e6 02       		.uleb128 0x2
 2152 00e7 0A       		.uleb128 0xa
 2153 00e8 00       		.byte	0
 2154 00e9 00       		.byte	0
 2155 00ea 0E       		.uleb128 0xe
 2156 00eb 2E       		.uleb128 0x2e
 2157 00ec 01       		.byte	0x1
 2158 00ed 3F       		.uleb128 0x3f
 2159 00ee 0C       		.uleb128 0xc
 2160 00ef 03       		.uleb128 0x3
 2161 00f0 0E       		.uleb128 0xe
 2162 00f1 3A       		.uleb128 0x3a
 2163 00f2 0B       		.uleb128 0xb
 2164 00f3 3B       		.uleb128 0x3b
 2165 00f4 05       		.uleb128 0x5
 2166 00f5 27       		.uleb128 0x27
 2167 00f6 0C       		.uleb128 0xc
 2168 00f7 49       		.uleb128 0x49
 2169 00f8 13       		.uleb128 0x13
 2170 00f9 11       		.uleb128 0x11
 2171 00fa 01       		.uleb128 0x1
 2172 00fb 12       		.uleb128 0x12
 2173 00fc 01       		.uleb128 0x1
 2174 00fd 40       		.uleb128 0x40
 2175 00fe 06       		.uleb128 0x6
 2176 00ff 9642     		.uleb128 0x2116
 2177 0101 0C       		.uleb128 0xc
 2178 0102 01       		.uleb128 0x1
 2179 0103 13       		.uleb128 0x13
 2180 0104 00       		.byte	0
 2181 0105 00       		.byte	0
 2182 0106 0F       		.uleb128 0xf
 2183 0107 2E       		.uleb128 0x2e
 2184 0108 01       		.byte	0x1
 2185 0109 3F       		.uleb128 0x3f
 2186 010a 0C       		.uleb128 0xc
 2187 010b 03       		.uleb128 0x3
 2188 010c 0E       		.uleb128 0xe
 2189 010d 3A       		.uleb128 0x3a
 2190 010e 0B       		.uleb128 0xb
 2191 010f 3B       		.uleb128 0x3b
 2192 0110 05       		.uleb128 0x5
 2193 0111 27       		.uleb128 0x27
 2194 0112 0C       		.uleb128 0xc
 2195 0113 11       		.uleb128 0x11
 2196 0114 01       		.uleb128 0x1
 2197 0115 12       		.uleb128 0x12
 2198 0116 01       		.uleb128 0x1
 2199 0117 40       		.uleb128 0x40
 2200 0118 06       		.uleb128 0x6
 2201 0119 9742     		.uleb128 0x2117
 2202 011b 0C       		.uleb128 0xc
 2203 011c 01       		.uleb128 0x1
 2204 011d 13       		.uleb128 0x13
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 54


 2205 011e 00       		.byte	0
 2206 011f 00       		.byte	0
 2207 0120 10       		.uleb128 0x10
 2208 0121 2E       		.uleb128 0x2e
 2209 0122 01       		.byte	0x1
 2210 0123 3F       		.uleb128 0x3f
 2211 0124 0C       		.uleb128 0xc
 2212 0125 03       		.uleb128 0x3
 2213 0126 0E       		.uleb128 0xe
 2214 0127 3A       		.uleb128 0x3a
 2215 0128 0B       		.uleb128 0xb
 2216 0129 3B       		.uleb128 0x3b
 2217 012a 05       		.uleb128 0x5
 2218 012b 27       		.uleb128 0x27
 2219 012c 0C       		.uleb128 0xc
 2220 012d 11       		.uleb128 0x11
 2221 012e 01       		.uleb128 0x1
 2222 012f 12       		.uleb128 0x12
 2223 0130 01       		.uleb128 0x1
 2224 0131 40       		.uleb128 0x40
 2225 0132 06       		.uleb128 0x6
 2226 0133 9642     		.uleb128 0x2116
 2227 0135 0C       		.uleb128 0xc
 2228 0136 01       		.uleb128 0x1
 2229 0137 13       		.uleb128 0x13
 2230 0138 00       		.byte	0
 2231 0139 00       		.byte	0
 2232 013a 11       		.uleb128 0x11
 2233 013b 01       		.uleb128 0x1
 2234 013c 01       		.byte	0x1
 2235 013d 49       		.uleb128 0x49
 2236 013e 13       		.uleb128 0x13
 2237 013f 01       		.uleb128 0x1
 2238 0140 13       		.uleb128 0x13
 2239 0141 00       		.byte	0
 2240 0142 00       		.byte	0
 2241 0143 12       		.uleb128 0x12
 2242 0144 21       		.uleb128 0x21
 2243 0145 00       		.byte	0
 2244 0146 49       		.uleb128 0x49
 2245 0147 13       		.uleb128 0x13
 2246 0148 2F       		.uleb128 0x2f
 2247 0149 0B       		.uleb128 0xb
 2248 014a 00       		.byte	0
 2249 014b 00       		.byte	0
 2250 014c 13       		.uleb128 0x13
 2251 014d 26       		.uleb128 0x26
 2252 014e 00       		.byte	0
 2253 014f 49       		.uleb128 0x49
 2254 0150 13       		.uleb128 0x13
 2255 0151 00       		.byte	0
 2256 0152 00       		.byte	0
 2257 0153 14       		.uleb128 0x14
 2258 0154 34       		.uleb128 0x34
 2259 0155 00       		.byte	0
 2260 0156 03       		.uleb128 0x3
 2261 0157 0E       		.uleb128 0xe
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 55


 2262 0158 3A       		.uleb128 0x3a
 2263 0159 0B       		.uleb128 0xb
 2264 015a 3B       		.uleb128 0x3b
 2265 015b 0B       		.uleb128 0xb
 2266 015c 49       		.uleb128 0x49
 2267 015d 13       		.uleb128 0x13
 2268 015e 3F       		.uleb128 0x3f
 2269 015f 0C       		.uleb128 0xc
 2270 0160 02       		.uleb128 0x2
 2271 0161 0A       		.uleb128 0xa
 2272 0162 00       		.byte	0
 2273 0163 00       		.byte	0
 2274 0164 00       		.byte	0
 2275              		.section	.debug_loc,"",%progbits
 2276              	.Ldebug_loc0:
 2277              	.LLST0:
 2278 0000 00000000 		.4byte	.LFB0
 2279 0004 02000000 		.4byte	.LCFI0
 2280 0008 0200     		.2byte	0x2
 2281 000a 7D       		.byte	0x7d
 2282 000b 00       		.sleb128 0
 2283 000c 02000000 		.4byte	.LCFI0
 2284 0010 04000000 		.4byte	.LCFI1
 2285 0014 0200     		.2byte	0x2
 2286 0016 7D       		.byte	0x7d
 2287 0017 08       		.sleb128 8
 2288 0018 04000000 		.4byte	.LCFI1
 2289 001c 24000000 		.4byte	.LFE0
 2290 0020 0200     		.2byte	0x2
 2291 0022 77       		.byte	0x77
 2292 0023 08       		.sleb128 8
 2293 0024 00000000 		.4byte	0
 2294 0028 00000000 		.4byte	0
 2295              	.LLST1:
 2296 002c 00000000 		.4byte	.LFB1
 2297 0030 02000000 		.4byte	.LCFI2
 2298 0034 0200     		.2byte	0x2
 2299 0036 7D       		.byte	0x7d
 2300 0037 00       		.sleb128 0
 2301 0038 02000000 		.4byte	.LCFI2
 2302 003c 04000000 		.4byte	.LCFI3
 2303 0040 0200     		.2byte	0x2
 2304 0042 7D       		.byte	0x7d
 2305 0043 0C       		.sleb128 12
 2306 0044 04000000 		.4byte	.LCFI3
 2307 0048 06000000 		.4byte	.LCFI4
 2308 004c 0200     		.2byte	0x2
 2309 004e 7D       		.byte	0x7d
 2310 004f 20       		.sleb128 32
 2311 0050 06000000 		.4byte	.LCFI4
 2312 0054 CC010000 		.4byte	.LFE1
 2313 0058 0200     		.2byte	0x2
 2314 005a 77       		.byte	0x77
 2315 005b 20       		.sleb128 32
 2316 005c 00000000 		.4byte	0
 2317 0060 00000000 		.4byte	0
 2318              	.LLST2:
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 56


 2319 0064 00000000 		.4byte	.LFB2
 2320 0068 02000000 		.4byte	.LCFI5
 2321 006c 0200     		.2byte	0x2
 2322 006e 7D       		.byte	0x7d
 2323 006f 00       		.sleb128 0
 2324 0070 02000000 		.4byte	.LCFI5
 2325 0074 04000000 		.4byte	.LCFI6
 2326 0078 0200     		.2byte	0x2
 2327 007a 7D       		.byte	0x7d
 2328 007b 08       		.sleb128 8
 2329 007c 04000000 		.4byte	.LCFI6
 2330 0080 20000000 		.4byte	.LFE2
 2331 0084 0200     		.2byte	0x2
 2332 0086 77       		.byte	0x77
 2333 0087 08       		.sleb128 8
 2334 0088 00000000 		.4byte	0
 2335 008c 00000000 		.4byte	0
 2336              	.LLST3:
 2337 0090 00000000 		.4byte	.LFB3
 2338 0094 02000000 		.4byte	.LCFI7
 2339 0098 0200     		.2byte	0x2
 2340 009a 7D       		.byte	0x7d
 2341 009b 00       		.sleb128 0
 2342 009c 02000000 		.4byte	.LCFI7
 2343 00a0 04000000 		.4byte	.LCFI8
 2344 00a4 0200     		.2byte	0x2
 2345 00a6 7D       		.byte	0x7d
 2346 00a7 08       		.sleb128 8
 2347 00a8 04000000 		.4byte	.LCFI8
 2348 00ac 18000000 		.4byte	.LFE3
 2349 00b0 0200     		.2byte	0x2
 2350 00b2 77       		.byte	0x77
 2351 00b3 08       		.sleb128 8
 2352 00b4 00000000 		.4byte	0
 2353 00b8 00000000 		.4byte	0
 2354              	.LLST4:
 2355 00bc 00000000 		.4byte	.LFB4
 2356 00c0 02000000 		.4byte	.LCFI9
 2357 00c4 0200     		.2byte	0x2
 2358 00c6 7D       		.byte	0x7d
 2359 00c7 00       		.sleb128 0
 2360 00c8 02000000 		.4byte	.LCFI9
 2361 00cc 04000000 		.4byte	.LCFI10
 2362 00d0 0200     		.2byte	0x2
 2363 00d2 7D       		.byte	0x7d
 2364 00d3 08       		.sleb128 8
 2365 00d4 04000000 		.4byte	.LCFI10
 2366 00d8 1C000000 		.4byte	.LFE4
 2367 00dc 0200     		.2byte	0x2
 2368 00de 77       		.byte	0x77
 2369 00df 08       		.sleb128 8
 2370 00e0 00000000 		.4byte	0
 2371 00e4 00000000 		.4byte	0
 2372              	.LLST5:
 2373 00e8 00000000 		.4byte	.LFB5
 2374 00ec 02000000 		.4byte	.LCFI11
 2375 00f0 0200     		.2byte	0x2
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 57


 2376 00f2 7D       		.byte	0x7d
 2377 00f3 00       		.sleb128 0
 2378 00f4 02000000 		.4byte	.LCFI11
 2379 00f8 04000000 		.4byte	.LCFI12
 2380 00fc 0200     		.2byte	0x2
 2381 00fe 7D       		.byte	0x7d
 2382 00ff 08       		.sleb128 8
 2383 0100 04000000 		.4byte	.LCFI12
 2384 0104 1C000000 		.4byte	.LFE5
 2385 0108 0200     		.2byte	0x2
 2386 010a 77       		.byte	0x77
 2387 010b 08       		.sleb128 8
 2388 010c 00000000 		.4byte	0
 2389 0110 00000000 		.4byte	0
 2390              	.LLST6:
 2391 0114 00000000 		.4byte	.LFB6
 2392 0118 02000000 		.4byte	.LCFI13
 2393 011c 0200     		.2byte	0x2
 2394 011e 7D       		.byte	0x7d
 2395 011f 00       		.sleb128 0
 2396 0120 02000000 		.4byte	.LCFI13
 2397 0124 04000000 		.4byte	.LCFI14
 2398 0128 0200     		.2byte	0x2
 2399 012a 7D       		.byte	0x7d
 2400 012b 08       		.sleb128 8
 2401 012c 04000000 		.4byte	.LCFI14
 2402 0130 06000000 		.4byte	.LCFI15
 2403 0134 0200     		.2byte	0x2
 2404 0136 7D       		.byte	0x7d
 2405 0137 18       		.sleb128 24
 2406 0138 06000000 		.4byte	.LCFI15
 2407 013c 48000000 		.4byte	.LFE6
 2408 0140 0200     		.2byte	0x2
 2409 0142 77       		.byte	0x77
 2410 0143 18       		.sleb128 24
 2411 0144 00000000 		.4byte	0
 2412 0148 00000000 		.4byte	0
 2413              	.LLST7:
 2414 014c 00000000 		.4byte	.LFB7
 2415 0150 02000000 		.4byte	.LCFI16
 2416 0154 0200     		.2byte	0x2
 2417 0156 7D       		.byte	0x7d
 2418 0157 00       		.sleb128 0
 2419 0158 02000000 		.4byte	.LCFI16
 2420 015c 04000000 		.4byte	.LCFI17
 2421 0160 0200     		.2byte	0x2
 2422 0162 7D       		.byte	0x7d
 2423 0163 08       		.sleb128 8
 2424 0164 04000000 		.4byte	.LCFI17
 2425 0168 06000000 		.4byte	.LCFI18
 2426 016c 0200     		.2byte	0x2
 2427 016e 7D       		.byte	0x7d
 2428 016f 18       		.sleb128 24
 2429 0170 06000000 		.4byte	.LCFI18
 2430 0174 44000000 		.4byte	.LFE7
 2431 0178 0200     		.2byte	0x2
 2432 017a 77       		.byte	0x77
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 58


 2433 017b 18       		.sleb128 24
 2434 017c 00000000 		.4byte	0
 2435 0180 00000000 		.4byte	0
 2436              	.LLST8:
 2437 0184 00000000 		.4byte	.LFB8
 2438 0188 02000000 		.4byte	.LCFI19
 2439 018c 0200     		.2byte	0x2
 2440 018e 7D       		.byte	0x7d
 2441 018f 00       		.sleb128 0
 2442 0190 02000000 		.4byte	.LCFI19
 2443 0194 04000000 		.4byte	.LCFI20
 2444 0198 0200     		.2byte	0x2
 2445 019a 7D       		.byte	0x7d
 2446 019b 08       		.sleb128 8
 2447 019c 04000000 		.4byte	.LCFI20
 2448 01a0 06000000 		.4byte	.LCFI21
 2449 01a4 0200     		.2byte	0x2
 2450 01a6 7D       		.byte	0x7d
 2451 01a7 10       		.sleb128 16
 2452 01a8 06000000 		.4byte	.LCFI21
 2453 01ac 1C000000 		.4byte	.LFE8
 2454 01b0 0200     		.2byte	0x2
 2455 01b2 77       		.byte	0x77
 2456 01b3 10       		.sleb128 16
 2457 01b4 00000000 		.4byte	0
 2458 01b8 00000000 		.4byte	0
 2459              	.LLST9:
 2460 01bc 00000000 		.4byte	.LFB9
 2461 01c0 02000000 		.4byte	.LCFI22
 2462 01c4 0200     		.2byte	0x2
 2463 01c6 7D       		.byte	0x7d
 2464 01c7 00       		.sleb128 0
 2465 01c8 02000000 		.4byte	.LCFI22
 2466 01cc 04000000 		.4byte	.LCFI23
 2467 01d0 0200     		.2byte	0x2
 2468 01d2 7D       		.byte	0x7d
 2469 01d3 08       		.sleb128 8
 2470 01d4 04000000 		.4byte	.LCFI23
 2471 01d8 06000000 		.4byte	.LCFI24
 2472 01dc 0200     		.2byte	0x2
 2473 01de 7D       		.byte	0x7d
 2474 01df 10       		.sleb128 16
 2475 01e0 06000000 		.4byte	.LCFI24
 2476 01e4 30000000 		.4byte	.LFE9
 2477 01e8 0200     		.2byte	0x2
 2478 01ea 77       		.byte	0x77
 2479 01eb 10       		.sleb128 16
 2480 01ec 00000000 		.4byte	0
 2481 01f0 00000000 		.4byte	0
 2482              	.LLST10:
 2483 01f4 00000000 		.4byte	.LFB10
 2484 01f8 02000000 		.4byte	.LCFI25
 2485 01fc 0200     		.2byte	0x2
 2486 01fe 7D       		.byte	0x7d
 2487 01ff 00       		.sleb128 0
 2488 0200 02000000 		.4byte	.LCFI25
 2489 0204 04000000 		.4byte	.LCFI26
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 59


 2490 0208 0200     		.2byte	0x2
 2491 020a 7D       		.byte	0x7d
 2492 020b 08       		.sleb128 8
 2493 020c 04000000 		.4byte	.LCFI26
 2494 0210 06000000 		.4byte	.LCFI27
 2495 0214 0200     		.2byte	0x2
 2496 0216 7D       		.byte	0x7d
 2497 0217 10       		.sleb128 16
 2498 0218 06000000 		.4byte	.LCFI27
 2499 021c 2C000000 		.4byte	.LFE10
 2500 0220 0200     		.2byte	0x2
 2501 0222 77       		.byte	0x77
 2502 0223 10       		.sleb128 16
 2503 0224 00000000 		.4byte	0
 2504 0228 00000000 		.4byte	0
 2505              	.LLST11:
 2506 022c 00000000 		.4byte	.LFB11
 2507 0230 02000000 		.4byte	.LCFI28
 2508 0234 0200     		.2byte	0x2
 2509 0236 7D       		.byte	0x7d
 2510 0237 00       		.sleb128 0
 2511 0238 02000000 		.4byte	.LCFI28
 2512 023c 04000000 		.4byte	.LCFI29
 2513 0240 0200     		.2byte	0x2
 2514 0242 7D       		.byte	0x7d
 2515 0243 08       		.sleb128 8
 2516 0244 04000000 		.4byte	.LCFI29
 2517 0248 06000000 		.4byte	.LCFI30
 2518 024c 0200     		.2byte	0x2
 2519 024e 7D       		.byte	0x7d
 2520 024f 10       		.sleb128 16
 2521 0250 06000000 		.4byte	.LCFI30
 2522 0254 1C000000 		.4byte	.LFE11
 2523 0258 0200     		.2byte	0x2
 2524 025a 77       		.byte	0x77
 2525 025b 10       		.sleb128 16
 2526 025c 00000000 		.4byte	0
 2527 0260 00000000 		.4byte	0
 2528              	.LLST12:
 2529 0264 00000000 		.4byte	.LFB12
 2530 0268 02000000 		.4byte	.LCFI31
 2531 026c 0200     		.2byte	0x2
 2532 026e 7D       		.byte	0x7d
 2533 026f 00       		.sleb128 0
 2534 0270 02000000 		.4byte	.LCFI31
 2535 0274 04000000 		.4byte	.LCFI32
 2536 0278 0200     		.2byte	0x2
 2537 027a 7D       		.byte	0x7d
 2538 027b 08       		.sleb128 8
 2539 027c 04000000 		.4byte	.LCFI32
 2540 0280 06000000 		.4byte	.LCFI33
 2541 0284 0200     		.2byte	0x2
 2542 0286 7D       		.byte	0x7d
 2543 0287 10       		.sleb128 16
 2544 0288 06000000 		.4byte	.LCFI33
 2545 028c 1C000000 		.4byte	.LFE12
 2546 0290 0200     		.2byte	0x2
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 60


 2547 0292 77       		.byte	0x77
 2548 0293 10       		.sleb128 16
 2549 0294 00000000 		.4byte	0
 2550 0298 00000000 		.4byte	0
 2551              	.LLST13:
 2552 029c 00000000 		.4byte	.LFB13
 2553 02a0 02000000 		.4byte	.LCFI34
 2554 02a4 0200     		.2byte	0x2
 2555 02a6 7D       		.byte	0x7d
 2556 02a7 00       		.sleb128 0
 2557 02a8 02000000 		.4byte	.LCFI34
 2558 02ac 04000000 		.4byte	.LCFI35
 2559 02b0 0200     		.2byte	0x2
 2560 02b2 7D       		.byte	0x7d
 2561 02b3 08       		.sleb128 8
 2562 02b4 04000000 		.4byte	.LCFI35
 2563 02b8 06000000 		.4byte	.LCFI36
 2564 02bc 0200     		.2byte	0x2
 2565 02be 7D       		.byte	0x7d
 2566 02bf 10       		.sleb128 16
 2567 02c0 06000000 		.4byte	.LCFI36
 2568 02c4 30000000 		.4byte	.LFE13
 2569 02c8 0200     		.2byte	0x2
 2570 02ca 77       		.byte	0x77
 2571 02cb 10       		.sleb128 16
 2572 02cc 00000000 		.4byte	0
 2573 02d0 00000000 		.4byte	0
 2574              	.LLST14:
 2575 02d4 00000000 		.4byte	.LFB14
 2576 02d8 02000000 		.4byte	.LCFI37
 2577 02dc 0200     		.2byte	0x2
 2578 02de 7D       		.byte	0x7d
 2579 02df 00       		.sleb128 0
 2580 02e0 02000000 		.4byte	.LCFI37
 2581 02e4 04000000 		.4byte	.LCFI38
 2582 02e8 0200     		.2byte	0x2
 2583 02ea 7D       		.byte	0x7d
 2584 02eb 08       		.sleb128 8
 2585 02ec 04000000 		.4byte	.LCFI38
 2586 02f0 06000000 		.4byte	.LCFI39
 2587 02f4 0200     		.2byte	0x2
 2588 02f6 7D       		.byte	0x7d
 2589 02f7 10       		.sleb128 16
 2590 02f8 06000000 		.4byte	.LCFI39
 2591 02fc 2C000000 		.4byte	.LFE14
 2592 0300 0200     		.2byte	0x2
 2593 0302 77       		.byte	0x77
 2594 0303 10       		.sleb128 16
 2595 0304 00000000 		.4byte	0
 2596 0308 00000000 		.4byte	0
 2597              	.LLST15:
 2598 030c 00000000 		.4byte	.LFB15
 2599 0310 02000000 		.4byte	.LCFI40
 2600 0314 0200     		.2byte	0x2
 2601 0316 7D       		.byte	0x7d
 2602 0317 00       		.sleb128 0
 2603 0318 02000000 		.4byte	.LCFI40
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 61


 2604 031c 04000000 		.4byte	.LCFI41
 2605 0320 0200     		.2byte	0x2
 2606 0322 7D       		.byte	0x7d
 2607 0323 08       		.sleb128 8
 2608 0324 04000000 		.4byte	.LCFI41
 2609 0328 06000000 		.4byte	.LCFI42
 2610 032c 0200     		.2byte	0x2
 2611 032e 7D       		.byte	0x7d
 2612 032f 18       		.sleb128 24
 2613 0330 06000000 		.4byte	.LCFI42
 2614 0334 C8000000 		.4byte	.LFE15
 2615 0338 0200     		.2byte	0x2
 2616 033a 77       		.byte	0x77
 2617 033b 18       		.sleb128 24
 2618 033c 00000000 		.4byte	0
 2619 0340 00000000 		.4byte	0
 2620              	.LLST16:
 2621 0344 00000000 		.4byte	.LFB16
 2622 0348 02000000 		.4byte	.LCFI43
 2623 034c 0200     		.2byte	0x2
 2624 034e 7D       		.byte	0x7d
 2625 034f 00       		.sleb128 0
 2626 0350 02000000 		.4byte	.LCFI43
 2627 0354 04000000 		.4byte	.LCFI44
 2628 0358 0200     		.2byte	0x2
 2629 035a 7D       		.byte	0x7d
 2630 035b 10       		.sleb128 16
 2631 035c 04000000 		.4byte	.LCFI44
 2632 0360 06000000 		.4byte	.LCFI45
 2633 0364 0200     		.2byte	0x2
 2634 0366 7D       		.byte	0x7d
 2635 0367 28       		.sleb128 40
 2636 0368 06000000 		.4byte	.LCFI45
 2637 036c C4000000 		.4byte	.LFE16
 2638 0370 0200     		.2byte	0x2
 2639 0372 77       		.byte	0x77
 2640 0373 28       		.sleb128 40
 2641 0374 00000000 		.4byte	0
 2642 0378 00000000 		.4byte	0
 2643              	.LLST17:
 2644 037c 00000000 		.4byte	.LFB17
 2645 0380 02000000 		.4byte	.LCFI46
 2646 0384 0200     		.2byte	0x2
 2647 0386 7D       		.byte	0x7d
 2648 0387 00       		.sleb128 0
 2649 0388 02000000 		.4byte	.LCFI46
 2650 038c 04000000 		.4byte	.LCFI47
 2651 0390 0200     		.2byte	0x2
 2652 0392 7D       		.byte	0x7d
 2653 0393 0C       		.sleb128 12
 2654 0394 04000000 		.4byte	.LCFI47
 2655 0398 06000000 		.4byte	.LCFI48
 2656 039c 0200     		.2byte	0x2
 2657 039e 7D       		.byte	0x7d
 2658 039f 20       		.sleb128 32
 2659 03a0 06000000 		.4byte	.LCFI48
 2660 03a4 A4000000 		.4byte	.LFE17
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 62


 2661 03a8 0200     		.2byte	0x2
 2662 03aa 77       		.byte	0x77
 2663 03ab 20       		.sleb128 32
 2664 03ac 00000000 		.4byte	0
 2665 03b0 00000000 		.4byte	0
 2666              		.section	.debug_aranges,"",%progbits
 2667 0000 A4000000 		.4byte	0xa4
 2668 0004 0200     		.2byte	0x2
 2669 0006 00000000 		.4byte	.Ldebug_info0
 2670 000a 04       		.byte	0x4
 2671 000b 00       		.byte	0
 2672 000c 0000     		.2byte	0
 2673 000e 0000     		.2byte	0
 2674 0010 00000000 		.4byte	.LFB0
 2675 0014 24000000 		.4byte	.LFE0-.LFB0
 2676 0018 00000000 		.4byte	.LFB1
 2677 001c CC010000 		.4byte	.LFE1-.LFB1
 2678 0020 00000000 		.4byte	.LFB2
 2679 0024 20000000 		.4byte	.LFE2-.LFB2
 2680 0028 00000000 		.4byte	.LFB3
 2681 002c 18000000 		.4byte	.LFE3-.LFB3
 2682 0030 00000000 		.4byte	.LFB4
 2683 0034 1C000000 		.4byte	.LFE4-.LFB4
 2684 0038 00000000 		.4byte	.LFB5
 2685 003c 1C000000 		.4byte	.LFE5-.LFB5
 2686 0040 00000000 		.4byte	.LFB6
 2687 0044 48000000 		.4byte	.LFE6-.LFB6
 2688 0048 00000000 		.4byte	.LFB7
 2689 004c 44000000 		.4byte	.LFE7-.LFB7
 2690 0050 00000000 		.4byte	.LFB8
 2691 0054 1C000000 		.4byte	.LFE8-.LFB8
 2692 0058 00000000 		.4byte	.LFB9
 2693 005c 30000000 		.4byte	.LFE9-.LFB9
 2694 0060 00000000 		.4byte	.LFB10
 2695 0064 2C000000 		.4byte	.LFE10-.LFB10
 2696 0068 00000000 		.4byte	.LFB11
 2697 006c 1C000000 		.4byte	.LFE11-.LFB11
 2698 0070 00000000 		.4byte	.LFB12
 2699 0074 1C000000 		.4byte	.LFE12-.LFB12
 2700 0078 00000000 		.4byte	.LFB13
 2701 007c 30000000 		.4byte	.LFE13-.LFB13
 2702 0080 00000000 		.4byte	.LFB14
 2703 0084 2C000000 		.4byte	.LFE14-.LFB14
 2704 0088 00000000 		.4byte	.LFB15
 2705 008c C8000000 		.4byte	.LFE15-.LFB15
 2706 0090 00000000 		.4byte	.LFB16
 2707 0094 C4000000 		.4byte	.LFE16-.LFB16
 2708 0098 00000000 		.4byte	.LFB17
 2709 009c A4000000 		.4byte	.LFE17-.LFB17
 2710 00a0 00000000 		.4byte	0
 2711 00a4 00000000 		.4byte	0
 2712              		.section	.debug_ranges,"",%progbits
 2713              	.Ldebug_ranges0:
 2714 0000 00000000 		.4byte	.LFB0
 2715 0004 24000000 		.4byte	.LFE0
 2716 0008 00000000 		.4byte	.LFB1
 2717 000c CC010000 		.4byte	.LFE1
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 63


 2718 0010 00000000 		.4byte	.LFB2
 2719 0014 20000000 		.4byte	.LFE2
 2720 0018 00000000 		.4byte	.LFB3
 2721 001c 18000000 		.4byte	.LFE3
 2722 0020 00000000 		.4byte	.LFB4
 2723 0024 1C000000 		.4byte	.LFE4
 2724 0028 00000000 		.4byte	.LFB5
 2725 002c 1C000000 		.4byte	.LFE5
 2726 0030 00000000 		.4byte	.LFB6
 2727 0034 48000000 		.4byte	.LFE6
 2728 0038 00000000 		.4byte	.LFB7
 2729 003c 44000000 		.4byte	.LFE7
 2730 0040 00000000 		.4byte	.LFB8
 2731 0044 1C000000 		.4byte	.LFE8
 2732 0048 00000000 		.4byte	.LFB9
 2733 004c 30000000 		.4byte	.LFE9
 2734 0050 00000000 		.4byte	.LFB10
 2735 0054 2C000000 		.4byte	.LFE10
 2736 0058 00000000 		.4byte	.LFB11
 2737 005c 1C000000 		.4byte	.LFE11
 2738 0060 00000000 		.4byte	.LFB12
 2739 0064 1C000000 		.4byte	.LFE12
 2740 0068 00000000 		.4byte	.LFB13
 2741 006c 30000000 		.4byte	.LFE13
 2742 0070 00000000 		.4byte	.LFB14
 2743 0074 2C000000 		.4byte	.LFE14
 2744 0078 00000000 		.4byte	.LFB15
 2745 007c C8000000 		.4byte	.LFE15
 2746 0080 00000000 		.4byte	.LFB16
 2747 0084 C4000000 		.4byte	.LFE16
 2748 0088 00000000 		.4byte	.LFB17
 2749 008c A4000000 		.4byte	.LFE17
 2750 0090 00000000 		.4byte	0
 2751 0094 00000000 		.4byte	0
 2752              		.section	.debug_line,"",%progbits
 2753              	.Ldebug_line0:
 2754 0000 26020000 		.section	.debug_str,"MS",%progbits,1
 2754      02004200 
 2754      00000201 
 2754      FB0E0D00 
 2754      01010101 
 2755              	.LASF6:
 2756 0000 6C6F6E67 		.ascii	"long long int\000"
 2756      206C6F6E 
 2756      6720696E 
 2756      7400
 2757              	.LASF55:
 2758 000e 4144435F 		.ascii	"ADC_channelsConfig\000"
 2758      6368616E 
 2758      6E656C73 
 2758      436F6E66 
 2758      696700
 2759              	.LASF19:
 2760 0021 72656733 		.ascii	"reg32\000"
 2760      3200
 2761              	.LASF60:
 2762 0027 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 64


 2762      6E657261 
 2762      7465645F 
 2762      536F7572 
 2762      63655C50 
 2763              	.LASF45:
 2764 0046 6F666673 		.ascii	"offset\000"
 2764      657400
 2765              	.LASF15:
 2766 004d 666C6F61 		.ascii	"float\000"
 2766      7400
 2767              	.LASF41:
 2768 0053 68696768 		.ascii	"highLimit\000"
 2768      4C696D69 
 2768      7400
 2769              	.LASF61:
 2770 005d 5A3A5C4F 		.ascii	"Z:\\OneDrive\\Tech\\GitHub\\Printf_test\\Printf_tes"
 2770      6E654472 
 2770      6976655C 
 2770      54656368 
 2770      5C476974 
 2771 008b 742E6379 		.ascii	"t.cydsn\000"
 2771      64736E00 
 2772              	.LASF48:
 2773 0093 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2773      436F756E 
 2773      7473546F 
 2773      5F6D566F 
 2773      6C747300 
 2774              	.LASF52:
 2775 00a7 75566F6C 		.ascii	"uVolts\000"
 2775      747300
 2776              	.LASF3:
 2777 00ae 73686F72 		.ascii	"short unsigned int\000"
 2777      7420756E 
 2777      7369676E 
 2777      65642069 
 2777      6E7400
 2778              	.LASF2:
 2779 00c1 73686F72 		.ascii	"short int\000"
 2779      7420696E 
 2779      7400
 2780              	.LASF44:
 2781 00cb 4144435F 		.ascii	"ADC_SetOffset\000"
 2781      5365744F 
 2781      66667365 
 2781      7400
 2782              	.LASF38:
 2783 00d9 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2783      5365744C 
 2783      6F774C69 
 2783      6D697400 
 2784              	.LASF29:
 2785 00e9 73746174 		.ascii	"status\000"
 2785      757300
 2786              	.LASF14:
 2787 00f0 666C6F61 		.ascii	"float32\000"
 2787      74333200 
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 65


 2788              	.LASF57:
 2789 00f8 4144435F 		.ascii	"ADC_offset\000"
 2789      6F666673 
 2789      657400
 2790              	.LASF22:
 2791 0103 746D7052 		.ascii	"tmpRegVal\000"
 2791      65675661 
 2791      6C00
 2792              	.LASF46:
 2793 010d 4144435F 		.ascii	"ADC_SetGain\000"
 2793      53657447 
 2793      61696E00 
 2794              	.LASF1:
 2795 0119 756E7369 		.ascii	"unsigned char\000"
 2795      676E6564 
 2795      20636861 
 2795      7200
 2796              	.LASF40:
 2797 0127 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2797      53657448 
 2797      6967684C 
 2797      696D6974 
 2797      00
 2798              	.LASF12:
 2799 0138 696E7431 		.ascii	"int16\000"
 2799      3600
 2800              	.LASF5:
 2801 013e 6C6F6E67 		.ascii	"long unsigned int\000"
 2801      20756E73 
 2801      69676E65 
 2801      6420696E 
 2801      7400
 2802              	.LASF13:
 2803 0150 696E7433 		.ascii	"int32\000"
 2803      3200
 2804              	.LASF31:
 2805 0156 4144435F 		.ascii	"ADC_GetResult16\000"
 2805      47657452 
 2805      6573756C 
 2805      74313600 
 2806              	.LASF36:
 2807 0166 4144435F 		.ascii	"ADC_SetChanMask\000"
 2807      53657443 
 2807      68616E4D 
 2807      61736B00 
 2808              	.LASF43:
 2809 0176 4144435F 		.ascii	"ADC_SetSatMask\000"
 2809      53657453 
 2809      61744D61 
 2809      736B00
 2810              	.LASF30:
 2811 0185 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2811      4973456E 
 2811      64436F6E 
 2811      76657273 
 2811      696F6E00 
 2812              	.LASF16:
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 66


 2813 0199 646F7562 		.ascii	"double\000"
 2813      6C6500
 2814              	.LASF39:
 2815 01a0 6C6F774C 		.ascii	"lowLimit\000"
 2815      696D6974 
 2815      00
 2816              	.LASF47:
 2817 01a9 61646347 		.ascii	"adcGain\000"
 2817      61696E00 
 2818              	.LASF10:
 2819 01b1 75696E74 		.ascii	"uint16\000"
 2819      313600
 2820              	.LASF49:
 2821 01b8 61646343 		.ascii	"adcCounts\000"
 2821      6F756E74 
 2821      7300
 2822              	.LASF11:
 2823 01c2 75696E74 		.ascii	"uint32\000"
 2823      333200
 2824              	.LASF42:
 2825 01c9 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2825      5365744C 
 2825      696D6974 
 2825      4D61736B 
 2825      00
 2826              	.LASF8:
 2827 01da 756E7369 		.ascii	"unsigned int\000"
 2827      676E6564 
 2827      20696E74 
 2827      00
 2828              	.LASF25:
 2829 01e7 4144435F 		.ascii	"ADC_Enable\000"
 2829      456E6162 
 2829      6C6500
 2830              	.LASF23:
 2831 01f2 636F756E 		.ascii	"counts\000"
 2831      747300
 2832              	.LASF7:
 2833 01f9 6C6F6E67 		.ascii	"long long unsigned int\000"
 2833      206C6F6E 
 2833      6720756E 
 2833      7369676E 
 2833      65642069 
 2834              	.LASF34:
 2835 0210 72657375 		.ascii	"result\000"
 2835      6C7400
 2836              	.LASF24:
 2837 0217 4144435F 		.ascii	"ADC_Start\000"
 2837      53746172 
 2837      7400
 2838              	.LASF35:
 2839 0221 4144435F 		.ascii	"ADC_Init\000"
 2839      496E6974 
 2839      00
 2840              	.LASF54:
 2841 022a 766F6C74 		.ascii	"volts\000"
 2841      7300
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 67


 2842              	.LASF33:
 2843 0230 6368616E 		.ascii	"chan\000"
 2843      00
 2844              	.LASF50:
 2845 0235 6D566F6C 		.ascii	"mVolts\000"
 2845      747300
 2846              	.LASF20:
 2847 023c 73697A65 		.ascii	"sizetype\000"
 2847      74797065 
 2847      00
 2848              	.LASF51:
 2849 0245 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2849      436F756E 
 2849      7473546F 
 2849      5F75566F 
 2849      6C747300 
 2850              	.LASF53:
 2851 0259 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2851      436F756E 
 2851      7473546F 
 2851      5F566F6C 
 2851      747300
 2852              	.LASF27:
 2853 026c 4144435F 		.ascii	"ADC_StartConvert\000"
 2853      53746172 
 2853      74436F6E 
 2853      76657274 
 2853      00
 2854              	.LASF37:
 2855 027d 6D61736B 		.ascii	"mask\000"
 2855      00
 2856              	.LASF21:
 2857 0282 63684E75 		.ascii	"chNum\000"
 2857      6D00
 2858              	.LASF32:
 2859 0288 7265744D 		.ascii	"retMode\000"
 2859      6F646500 
 2860              	.LASF28:
 2861 0290 4144435F 		.ascii	"ADC_StopConvert\000"
 2861      53746F70 
 2861      436F6E76 
 2861      65727400 
 2862              	.LASF9:
 2863 02a0 75696E74 		.ascii	"uint8\000"
 2863      3800
 2864              	.LASF58:
 2865 02a6 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2865      636F756E 
 2865      74735065 
 2865      72313056 
 2865      6F6C7400 
 2866              	.LASF4:
 2867 02ba 6C6F6E67 		.ascii	"long int\000"
 2867      20696E74 
 2867      00
 2868              	.LASF18:
 2869 02c3 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\JOHNSO~1\AppData\Local\Temp\ccUx01PH.s 			page 68


 2869      00
 2870              	.LASF0:
 2871 02c8 7369676E 		.ascii	"signed char\000"
 2871      65642063 
 2871      68617200 
 2872              	.LASF56:
 2873 02d4 4144435F 		.ascii	"ADC_initVar\000"
 2873      696E6974 
 2873      56617200 
 2874              	.LASF59:
 2875 02e0 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2875      4320342E 
 2875      372E3320 
 2875      32303133 
 2875      30333132 
 2876 0313 616E6368 		.ascii	"anch revision 196615]\000"
 2876      20726576 
 2876      6973696F 
 2876      6E203139 
 2876      36363135 
 2877              	.LASF17:
 2878 0329 696E7436 		.ascii	"int64\000"
 2878      3400
 2879              	.LASF26:
 2880 032f 4144435F 		.ascii	"ADC_Stop\000"
 2880      53746F70 
 2880      00
 2881              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
